000100 IDENTIFICATION DIVISION.
000200 PROGRAM-ID. VSAMPGM.
000300 AUTHOR.     GEOFFREY MCINTYRE.
000400 DATE-WRITTEN. APRIL 18, 1997.
000500 DATE-COMPILED.
000600*REMARKS.
000700*  TITLE: VSAM space manager.
000800*
000900*  This program is an interactive ISPF dialog function.
001000*  It can also run in batch (see parm info).
001100*
001200*  INPUT:    DSNLIST  - A list of VSAM KSDS cluster names to be
001300*                       monitored/processed.
001400*            LISTCAT  - IDCAMS LISTCAT output created by a call
001500*                       to IDCAMS.
001600*            REGISET  - The Datapacker list of registered files.
001700*            PARM     - Parm info is recieved in linkage.
001800*
001900*  PROCESS:- A LISTCAT is performed on each VSAM dataset. The LISTCAT
002000*            output is parsed for various pieces of information.
002100*
002200*            Statistics and parameters that affect performance or
002300*            space requirements are analyzed. For VSAM files that
002400*            are poorly allocated, JCL to redefine the file is
002500*            automatically generated (data is preserved) in batch.
002600*
002700*            If running in foreground, the user specifies a single
002800*            VSAM file, and can choose whether or not to recreate
002900*            the file. The user can also generate and submit a job
003000*            that calculates the true average LRECL, and another job
003100*            that analyzes the index portion.
003200*
003300*  OUTPUT:   ISPFILE  - Generated JCL. There is no FD for ISPFILE,
003400*                       because this is an ISPF dialog that calls
003500*                       file tailoring (skeletons), which in turn
003600*                       writes to ISPFILE.
003700*            SYSIN    - The IDCAMS LISTCAT card is created by this
003800*                       program and written to SYSIN, which in turn
003900*                       is read by a call to IDCAMS.
004000*            EXCPRPT  - Exception report. Shows which files were
004100*                       bypassed or processed, and for what reason.
004200*            CHNGRPT  - Change report. Shows the before and after
004300*                       values of the VSAM delete/define cards. Also
004400*                       shows individual and total savings by cylinders
004500*                       and dollars.
004600*
004700*   MAINTENANCE NOTES:
004800*
004900*----------------------------------------------------------------*
005000*  When DASD costs change, then you need to change               *
005100*     WS-DAILY-GB-COST    (currently $19.82).                    *
005200*                                                                *
005300*  When new disk drives come in, the cylinder size might change. *
005400*  You will need to change                                       *
005500*   - WS-GIGABYTE-PER-CYL (currently .000811).                   *
005600*   - WS-TRACKS-PER-CYL   (currently 15).                        *
005700*   - The EVALUATE clause in 0518- will need changing.           *
005800*   - Where WS-CIS-FOR-INDEX-SET is calculated, the number       *
005900*     248 may need adjusting. Call RTI for the new number.       *
006000*   - Where INDXPRIM is calculated, the number 21 (number of     *
006100*     2048-CISIZES per track) may need adjusting.                *
006200*                                                                *
006300*----------------------------------------------------------------*
006400*     This program is an ISPF dialog. 'ISPEXEC' and 'ISPLINK' are
006500*     used to call several ISPF service functions. If you are not
006600*     familiar with ISPF services, it may be helpful to have an
006700*     ISPF manual at your side (SC34-4266 and SC34-4259).  Many of
006800*     the ISPF functions are intuitive; for example, TBSORT sorts
006900*     a table, DISPLAY displays a panel, etc.
007000*
007100*     If you have coded CLISTs that use ISPF functions, the
007200*     ISPEXEC method of invoking ISPF services will be most
007300*     familiar to you:  the syntax of the CALL mechanism is almost
007400*     precisely the same as in a CLIST. The ISPLINK method uses
007500*     several different fields in its CALL mechanism.
007600*
007700*     Working-Storage definitions for successful handling of
007800*     dialog variables is critical and a little complex. Once
007900*     understood, however, the process is not difficult. Every
008000*     variable that must be shared between the COBOL program and
008100*     any panels, skeletons, tables, and/or CLISTs invoked by the
008200*     COBOL program must be defined in Working-Storage using 4
008300*     lists, as described below. In other words, if the COBOL
008400*     program needs to read or update the contents of any given
008500*     variable referenced by a skeleton, panel, etc.,
008600*     addressibility for that variable needs to be established as
008700*     described below:
008800*
008900*     C A U T I O N !!
009000*       When adding or deleting an ISPF-variable, you must also
009100*       update 4 lists:  ISPF-LENGTH-LIST,
009200*                        ISPF-NAME-VDEFINE,
009300*                        ISPF-VARIABLE-LIST, and
009400*                        ISPF-FORMAT-LIST.
009500*
009600*       These lists are positional in relation to each other, so
009700*       be careful! Each entry in each list must correspond to
009800*       each other, or else unpredictable results will occur! The
009900*       entries are maintained in alphabetical order to make it
010000*       easier to keep the 4 lists in sync.
010100*
010200*       You must also adjust  ISPF-NAME-CNT  to reflect the
010300*       new number of variables!!!
010400*
010500*     An alternative to executing a single VDEFINE with these 4
010600*     lists is to execute a VDEFINE separately for each variable.
010700*     (If you have 100 variables to define, that's 100 CALLs).
010800*     The author of this program has chosen the LIST version.
010900*
011000*       With the advent of COBOL II, it is possible for the program
011100*       to do a little self-checking to help verify that the 4 lists
011200*       are in sync. This program performs the following checks:
011300*
011400*           1)  It verifies that ISPF-LENGTH-LIST has precisely
011500*               as many entries as indicated by ISPF-NAME-CNT.
011600*
011700*           2)  It verifies that ISPF-NAME-VDEFINE has precisely
011800*               as many entries as indicated by ISPF-NAME-CNT.
011900*
012000*           3)  It verifies that ISPF-FORMAT-LIST has precisely
012100*               as many entries as indicated by ISPF-NAME-CNT.
012200*
012300*           4)  It verifies that ISPF-VARIABLE-LIST is precisely
012400*               as long as the sum of the contents of each and
012500*               every entry in ISPF-LENGTH-LIST.
012600*
012700*       It does NOT verify that the individual entries are sorted
012800*       properly. YOU MUST VERIFY THAT THE 4 LISTS ARE SORTED PRO-
012900*       PERLY!
013000*
013100*       If one or more of the above checks fail, an information
013200*       panel indicating the problem is displayed, and the program
013300*       exits.
013400*
013500*      _______________________________________________________________
013600*
013700********************************************************************
013800 ENVIRONMENT DIVISION.
013900 CONFIGURATION SECTION.
014000 SOURCE-COMPUTER. IBM-370.
014100 OBJECT-COMPUTER. IBM-370.
014200 INPUT-OUTPUT SECTION.
014300 FILE-CONTROL.
014400     SELECT LISTCAT              ASSIGN TO LISTCAT.
014500     SELECT DSNLIST              ASSIGN TO DSNLIST.
014600     SELECT SYSIN                ASSIGN TO SYSIN.
014700     SELECT EXCPRPT              ASSIGN TO EXCPRPT.
014800     SELECT CHNGRPT              ASSIGN TO CHNGRPT.
014900     SELECT REGISET              ASSIGN TO REGISET
015000            ORGANIZATION IS INDEXED
015100            ACCESS MODE  IS DYNAMIC
015200            RECORD KEY   IS REG-KEY
015300            FILE STATUS  IS VSAM-STATUS.
015400
015500 DATA DIVISION.
015600 FILE SECTION.
015700
015800 FD  LISTCAT
015900     BLOCK CONTAINS 0 RECORDS
016000     LABEL RECORDS ARE STANDARD.
016100 01  FILLER                               PIC X(121).
016200 01  FILLER                               PIC X(008).
016300
016400 FD  DSNLIST
016500     BLOCK CONTAINS 0 RECORDS
016600     LABEL RECORDS ARE STANDARD.
016700 01  DSNLIST-RECORD.
016800     05  FILLER                           PIC X(01).
016900         88 COMMENT-CARD                      VALUE '*'.
017000         88 SIMULATE-CARD                     VALUE 'S'.
017100     05  DSNLIST-SPECIAL-PROCESSING       PIC X(01).
017200         88  PRESERVE-CISIZE                 VALUE 'P'.
017300         88  BATCH-OPTIMAL-CISIZE            VALUE 'B'.
017400         88  OPT-CISIZE-AND-100-PERCENT      VALUE '1'.
017500     05  VSAM-DATASET-NAME                PIC X(38).
017600     05  PDS-UPDATE-MEMBER                PIC X(40).
017700
017800 FD  SYSIN
017900     BLOCK CONTAINS 0 RECORDS
018000     LABEL RECORDS ARE STANDARD.
018100 01  SYSIN-RECORD                         PIC X(80).
018200
018300 FD  EXCPRPT
018400     BLOCK CONTAINS 0 RECORDS
018500     LABEL RECORDS ARE STANDARD.
018600 01  EXCPRPT-RECORD.
018700     05  ER-ASA-CONTROL                   PIC X(01).
018800     05  ER-SPECIAL-FLAG                  PIC X(01).
018900         88  ER-COMPRESSED-FILE               VALUE '*'.
019000         88  ER-SIMULATED-RUN                 VALUE 'S'.
019100     05  ER-DATASET-NAME                  PIC X(38).
019200     05  FILLER                           PIC X(01).
019300     05  ER-EXCEPTION                     PIC X(46).
019400     05  FILLER                           PIC X(01).
019500     05  ER-ACTION                        PIC X(45).
019600
019700 FD  CHNGRPT
019800     BLOCK CONTAINS 0 RECORDS
019900     LABEL RECORDS ARE STANDARD.
020000 01  CHNGRPT-RECORD                       PIC X(133).
020100
020200 FD  REGISET
020300     BLOCK CONTAINS 0 RECORDS
020400     LABEL RECORDS ARE STANDARD.
020500 01  FILLER                               PIC X(1000).
020600 01  FILLER                               PIC X(4087).
020700 01  BMC-REGISTRATION.
020800     05  REG-KEY                          PIC X(64).
020900     05  FILLER                           PIC X(42).
021000     05  BMC-COMPRESSION-FLAG             PIC X(01).
021100         88  BMC-COMPRESSED-FILE              VALUE 'Y'.
021200
021300 WORKING-STORAGE SECTION.
021400
021500 01  WS-LISTCAT-RECORD                    PIC X(121).
021600
021700 01  WS-REG-KEY.
021800     05  FILLER                           PIC X(02) VALUE 'DD'.
021900     05  BMC-VSAM-DATASET-NAME            PIC X(44).
022000     05  FILLER                           PIC X(18)
022100                                              VALUE LOW-VALUES.
022200
022300******************************************************************
022400*                                                                *
022500*         WORKING-STORAGE FIELDS FOR ISPF SERVICE CALLS          *
022600*                                                                *
022700******************************************************************
022800 01  ISPF-BUFFER             PICTURE X(150)     VALUE SPACES.
022900*    ISPF-BUFFER FIELD LENGTH CAN BE INCREASED IF NECESSARY.
023000 01  ISPF-BUF-LENGTH         PICTURE 9(6)  COMP VALUE 150.
023100 01  ISPF-OPTION1            PICTURE X(8)       VALUE SPACES.
023200 01  ISPF-OPTION2            PICTURE X(8)       VALUE SPACES.
023300 01  ISPF-TABLE-NAME         PICTURE X(8)       VALUE SPACES.
023400 01  ISPF-VDEFINE-OPTION                 PIC X(12)
023500                                         VALUE '(COPY, LIST)'.
023600
023700* DEFINE DIALOG SERVICE TYPES FOR CALLS TO ISPF.
023800 01  TBCREATE                  PIC X(08) VALUE 'TBCREATE'.
023900 01  VDEFINE                   PIC X(08) VALUE 'VDEFINE '.
024000 01  VDELETE                   PIC X(08) VALUE 'VDELETE '.
024100
024200******************************************************************
024300*    ISPF-KEY-LIST IS USED BY THE TBCREATE SERVICE TO NAME THE   *
024400*                 VARIABLES TO BE USED AS KEYS IN THE TABLE TO   *
024500*                 BE CREATED                                     *
024600 01  ISPF-KEY-LIST.
024700     05  ISPF-KEY-COUNT      PICTURE 9(6)  COMP VALUE ZEROES.
024800     05  FILLER              PICTURE 9(6)  COMP VALUE ZEROES.
024900     05  ISPF-KEY       OCCURS  5 TIMES         PICTURE X(8).
025000*        THIS ARRAY HAS BEEN DEFINED WITH A DIMENSION OF 5.      *
025100*                 ADJUST ACCORDING TO YOUR REQUIREMENTS.         *
025200******************************************************************
025300     EJECT
025400******************************************************************
025500*    ISPF-LENGTH-LIST IS USED BY THE VDEFINE SERVICE             *
025600*                    TO SPECIFY THE LENGTH OF THE DATA FOR THE   *
025700*                    VARIABLES(S) IN A NAME LIST. EACH LENGTH    *
025800*                    CORRESPONDS BY POSITION TO A VARIABLE IN    *
025900*                    THE NAME LIST, SO THERE MUST BE AS MANY     *
026000*                    LENGTHS AS THERE ARE NAMES IN THE LIST.     *
026100******************************************************************
026200 01  ISPF-LENGTH-LIST.
026300     05  FILLER                          PIC 9(06) COMP VALUE  4. AACLOIFL
026400     05  FILLER                          PIC 9(06) COMP VALUE  4. AACLOILL
026500     05  FILLER                          PIC 9(06) COMP VALUE  4. AACLOINV
026600     05  FILLER                          PIC 9(06) COMP VALUE  4. AACLOIVL
026700     05  FILLER                          PIC 9(06) COMP VALUE  4. AALOIFL
026800     05  FILLER                          PIC 9(06) COMP VALUE  4. AALOILL
026900     05  FILLER                          PIC 9(06) COMP VALUE  4. AALOINV
027000     05  FILLER                          PIC 9(06) COMP VALUE  4. AALOIVL
027100     05  FILLER                          PIC 9(06) COMP VALUE  4. ABCODE
027200     05  FILLER                          PIC 9(06) COMP VALUE  8. ABFUNC
027300     05  FILLER                          PIC 9(06) COMP VALUE 70. ABMISC
027400     05  FILLER                          PIC 9(06) COMP VALUE 70. ABMSG
027500     05  FILLER                          PIC 9(06) COMP VALUE 30. ABPARA
027600     05  FILLER                          PIC 9(06) COMP VALUE  2. ABVSAM
027700     05  FILLER                          PIC 9(06) COMP VALUE  8. ADDRECS
027800     05  FILLER                          PIC 9(06) COMP VALUE  5. ALLOCCYL
027900     05  FILLER                          PIC 9(06) COMP VALUE  5. ARECSZ
028000     05  FILLER                          PIC 9(06) COMP VALUE  5. AVGLRECL
028100     05  FILLER                          PIC 9(06) COMP VALUE  5. AVGLRECT
028200     05  FILLER                          PIC 9(06) COMP VALUE  8. BKUPHLQ
028300     05  FILLER                          PIC 9(06) COMP VALUE  1. BMCFLAG
028400     05  FILLER                          PIC 9(06) COMP VALUE  5. CIFBYTES
028500     05  FILLER                          PIC 9(06) COMP VALUE  5. CIPERCA
028600     05  FILLER                          PIC 9(06) COMP VALUE  5. CISIZED
028700     05  FILLER                          PIC 9(06) COMP VALUE  5. CISIZED2
028800     05  FILLER                          PIC 9(06) COMP VALUE  5. CISIZEI
028900     05  FILLER                          PIC 9(06) COMP VALUE  8. COLALC
029000     05  FILLER                          PIC 9(06) COMP VALUE  8. COLCAS
029100     05  FILLER                          PIC 9(06) COMP VALUE  8. COLCIP
029200     05  FILLER                          PIC 9(06) COMP VALUE  8. COLCIS
029300     05  FILLER                          PIC 9(06) COMP VALUE  8. COLDCI
029400     05  FILLER                          PIC 9(06) COMP VALUE  8. COLEXT
029500     05  FILLER                          PIC 9(06) COMP VALUE  8. COLFCA
029600     05  FILLER                          PIC 9(06) COMP VALUE  8. COLFCI
029700     05  FILLER                          PIC 9(06) COMP VALUE  8. COLFLG1
029800     05  FILLER                          PIC 9(06) COMP VALUE  8. COLFLG2
029900     05  FILLER                          PIC 9(06) COMP VALUE  8. COLFLG3
030000     05  FILLER                          PIC 9(06) COMP VALUE  8. COLFLG4
030100     05  FILLER                          PIC 9(06) COMP VALUE  8. COLFLG5
030200     05  FILLER                          PIC 9(06) COMP VALUE  8. COLICI
030300     05  FILLER                          PIC 9(06) COMP VALUE  8. COLKEY
030400     05  FILLER                          PIC 9(06) COMP VALUE  8. COLPCT
030500     05  FILLER                          PIC 9(06) COMP VALUE 13. CSTALLFS
030600     05  FILLER                          PIC 9(06) COMP VALUE 13. CSTCAFS
030700     05  FILLER                          PIC 9(06) COMP VALUE 13. CSTCIFS
030800     05  FILLER                          PIC 9(06) COMP VALUE 13. CSTTOTAL
030900     05  FILLER                          PIC 9(06) COMP VALUE 13. CSTUFS
031000     05  FILLER                          PIC 9(06) COMP VALUE 13. CSTUNUSD
031100     05  FILLER                          PIC 9(06) COMP VALUE 13. CSTUSDFS
031200     05  FILLER                          PIC 9(06) COMP VALUE 44. DSNAME
031300     05  FILLER                          PIC 9(06) COMP VALUE  1. ENVIRON
031400     05  FILLER                          PIC 9(06) COMP VALUE  5. EXTENTS
031500     05  FILLER                          PIC 9(06) COMP VALUE  3. FREECA
031600     05  FILLER                          PIC 9(06) COMP VALUE  3. FREECI
031700     05  FILLER                          PIC 9(06) COMP VALUE  3. FREECIP1
031800     05  FILLER                          PIC 9(06) COMP VALUE  3. FREECIP2
031900     05  FILLER                          PIC 9(06) COMP VALUE  3. FREECIP3
032000     05  FILLER                          PIC 9(06) COMP VALUE  3. FREECIP4
032100     05  FILLER                          PIC 9(06) COMP VALUE  3. FREECIP5
032200     05  FILLER                          PIC 9(06) COMP VALUE  3. FREECIP6
032300     05  FILLER                          PIC 9(06) COMP VALUE  3. FREECIP7
032400     05  FILLER                          PIC 9(06) COMP VALUE  3. FREECIP8
032500     05  FILLER                          PIC 9(06) COMP VALUE  3. FREECIP9
032600     05  FILLER                          PIC 9(06) COMP VALUE 44. INDEXNAM
032700     05  FILLER                          PIC 9(06) COMP VALUE  4. INDXPRIM
032800     05  FILLER                          PIC 9(06) COMP VALUE  4. INDXSEC
032900     05  FILLER                          PIC 9(06) COMP VALUE  8. JOBNAME
033000     05  FILLER                          PIC 9(06) COMP VALUE  5. KEYLEN
033100     05  FILLER                          PIC 9(06) COMP VALUE  5. KEYOFF
033200     05  FILLER                          PIC 9(06) COMP VALUE  4. MACHINE
033300     05  FILLER                          PIC 9(06) COMP VALUE  5. MAXLRECL
033400     05  FILLER                          PIC 9(06) COMP VALUE  1. MSGCLASS
033500     05  FILLER                          PIC 9(06) COMP VALUE  3. NEWCAFP
033600     05  FILLER                          PIC 9(06) COMP VALUE  3. NEWCIFP
033700     05  FILLER                          PIC 9(06) COMP VALUE  5. NEWDCIS
033800     05  FILLER                          PIC 9(06) COMP VALUE  5. NEWICIS
033900     05  FILLER                          PIC 9(06) COMP VALUE  4. NEWPRIM
034000     05  FILLER                          PIC 9(06) COMP VALUE  4. NEWSEC
034100     05  FILLER                          PIC 9(06) COMP VALUE  3. OLDCAFP
034200     05  FILLER                          PIC 9(06) COMP VALUE  3. OLDCIFP
034300     05  FILLER                          PIC 9(06) COMP VALUE  5. OLDDCIS
034400     05  FILLER                          PIC 9(06) COMP VALUE  5. OLDICIS
034500     05  FILLER                          PIC 9(06) COMP VALUE  5. OLDPRIM
034600     05  FILLER                          PIC 9(06) COMP VALUE  5. OLDSEC
034700     05  FILLER                          PIC 9(06) COMP VALUE  6. PCTALLFS
034800     05  FILLER                          PIC 9(06) COMP VALUE  6. PCTCAFS
034900     05  FILLER                          PIC 9(06) COMP VALUE  6. PCTCIFS
035000     05  FILLER                          PIC 9(06) COMP VALUE  6. PCTUFS
035100     05  FILLER                          PIC 9(06) COMP VALUE  6. PCTUNUSD
035200     05  FILLER                          PIC 9(06) COMP VALUE  6. PCTUSDFS
035300     05  FILLER                          PIC 9(06) COMP VALUE  6. PCTUSED
035400     05  FILLER                          PIC 9(06) COMP VALUE 41. PDSMEM
035500     05  FILLER                          PIC 9(06) COMP VALUE  5. PRIMARY
035600     05  FILLER                          PIC 9(06) COMP VALUE 10. RECCNT
035700     05  FILLER                          PIC 9(06) COMP VALUE 10. RECDEL
035800     05  FILLER                          PIC 9(06) COMP VALUE 10. RECINS
035900     05  FILLER                          PIC 9(06) COMP VALUE  5. RECPCYL
036000     05  FILLER                          PIC 9(06) COMP VALUE 10. RECREAD
036100     05  FILLER                          PIC 9(06) COMP VALUE  9. RECTOTAL
036200     05  FILLER                          PIC 9(06) COMP VALUE 10. RECUPD
036300     05  FILLER                          PIC 9(06) COMP VALUE  6. SAVEDCYL
036400     05  FILLER                          PIC 9(06) COMP VALUE 13. SAVEDDOL
036500     05  FILLER                          PIC 9(06) COMP VALUE  5. SECNDARY
036600     05  FILLER                          PIC 9(06) COMP VALUE  3. SHROPTNS
036700     05  FILLER                          PIC 9(06) COMP VALUE  4. SPACTYPE
036800     05  FILLER                          PIC 9(06) COMP VALUE  1. SPANNED
036900     05  FILLER                          PIC 9(06) COMP VALUE  5. SPLITSCA
037000     05  FILLER                          PIC 9(06) COMP VALUE  5. SPLITSCI
037100     05  FILLER                          PIC 9(06) COMP VALUE  5. TAVGLREC
037200     05  FILLER                          PIC 9(06) COMP VALUE  6. VOLSER
037300     05  FILLER                          PIC 9(06) COMP VALUE  9. VOLUME
037400     05  FILLER                          PIC 9(06) COMP VALUE  3. VSMAVGL
037500     05  FILLER                          PIC 9(06) COMP VALUE  3. VSMKEYL
037600     05  FILLER                          PIC 9(06) COMP VALUE  3. VSMREORG
037700     05  FILLER                         PIC 9(06) COMP VALUE 512. ZEDLMSG
037800     05  FILLER                          PIC 9(06) COMP VALUE 24. ZEDSMSG
037900     05  FILLER                          PIC 9(06) COMP VALUE  2. ZMONTH
038000     05  FILLER                          PIC 9(06) COMP VALUE  4. ZSYSID
038100     05  FILLER                          PIC 9(06) COMP VALUE  4. ZTDSELS
038200     05  FILLER                          PIC 9(06) COMP VALUE  5. ZTIME
038300     05  FILLER                          PIC 9(06) COMP VALUE  8. ZUSER
038400     05  FILLER                          PIC 9(06) COMP VALUE  2. ZYEAR
038500
038600 01  ISPF-LENGTH-TABLE.
038700     05  ISPF-LENGTH-ENTRY  OCCURS  1000 TIMES
038800                                         PIC 9(06) COMP.
038900
039000 01  LENGTH-SUB                          PIC 9(08) COMP VALUE 0.
039100
039200******************************************************************
039300*    ISPF-NAME-LIST IS USED BY MANY VARIABLE AND TABLE SERVICES  *
039400*                  TO  SPECIFY THE NAME(S) OF VARIABLES: THESE   *
039500*                  MAY BE DIALOG VARIABLES, NON-KEY NAME         *
039600*                  VARIABLES FOR TABLES, OR EXTENSION TABLE      *
039700*                  VARIABLES.                                    *
039800 01  ISPF-NAME-LIST.
039900     05  ISPF-NAME-COUNT                 PIC 9(06) COMP VALUE  0.
040000     05  FILLER                          PIC 9(06) COMP VALUE  0.
040100     05  ISPF-NAME      OCCURS 25 TIMES         PIC X(08).
040200*        THIS ARRAY HAS BEEN DEFINED WITH A DIMENSION OF 25.     *
040300*                 ADJUST ACCORDING TO YOUR REQUIREMENTS.         *
040400******************************************************************
040500
040600******************************************************************
040700* ISPF-NAME-VDEFINE IS A LIST OF VARIABLES TO BE DEFINED IN THE  *
040800*                   COMMON AREA (V-POOL).                        *
040900******************************************************************
041000 01  ISPF-NAME-VDEFINE.
041100     05  ISPF-NAME-CNT           PIC 9(06) COMP VALUE 122.
041200     05  FILLER                  PIC 9(06) COMP VALUE ZEROES.
041300     05  FILLER                  PIC X(08) VALUE 'AACLOIFL'.
041400     05  FILLER                  PIC X(08) VALUE 'AACLOILL'.
041500     05  FILLER                  PIC X(08) VALUE 'AACLOINV'.
041600     05  FILLER                  PIC X(08) VALUE 'AACLOIVL'.
041700     05  FILLER                  PIC X(08) VALUE 'AALOIFL '.
041800     05  FILLER                  PIC X(08) VALUE 'AALOILL '.
041900     05  FILLER                  PIC X(08) VALUE 'AALOINV '.
042000     05  FILLER                  PIC X(08) VALUE 'AALOIVL '.
042100     05  FILLER                  PIC X(08) VALUE 'ABCODE  '.
042200     05  FILLER                  PIC X(08) VALUE 'ABFUNC  '.
042300     05  FILLER                  PIC X(08) VALUE 'ABMISC  '.
042400     05  FILLER                  PIC X(08) VALUE 'ABMSG   '.
042500     05  FILLER                  PIC X(08) VALUE 'ABPARA  '.
042600     05  FILLER                  PIC X(08) VALUE 'ABVSAM  '.
042700     05  FILLER                  PIC X(08) VALUE 'ADDRECS '.
042800     05  FILLER                  PIC X(08) VALUE 'ALLOCCYL'.
042900     05  FILLER                  PIC X(08) VALUE 'ARECSZ  '.
043000     05  FILLER                  PIC X(08) VALUE 'AVGLRECL'.
043100     05  FILLER                  PIC X(08) VALUE 'AVGLRECT'.
043200     05  FILLER                  PIC X(08) VALUE 'BKUPHLQ '.
043300     05  FILLER                  PIC X(08) VALUE 'BMCFLAG '.
043400     05  FILLER                  PIC X(08) VALUE 'CIFBYTES'.
043500     05  FILLER                  PIC X(08) VALUE 'CIPERCA '.
043600     05  FILLER                  PIC X(08) VALUE 'CISIZED '.
043700     05  FILLER                  PIC X(08) VALUE 'CISIZED2'.
043800     05  FILLER                  PIC X(08) VALUE 'CISIZEI '.
043900     05  FILLER                  PIC X(08) VALUE 'COLALC  '.
044000     05  FILLER                  PIC X(08) VALUE 'COLCAS  '.
044100     05  FILLER                  PIC X(08) VALUE 'COLCIP  '.
044200     05  FILLER                  PIC X(08) VALUE 'COLCIS  '.
044300     05  FILLER                  PIC X(08) VALUE 'COLDCI  '.
044400     05  FILLER                  PIC X(08) VALUE 'COLEXT  '.
044500     05  FILLER                  PIC X(08) VALUE 'COLFCA  '.
044600     05  FILLER                  PIC X(08) VALUE 'COLFCI  '.
044700     05  FILLER                  PIC X(08) VALUE 'COLFLG1 '.
044800     05  FILLER                  PIC X(08) VALUE 'COLFLG2 '.
044900     05  FILLER                  PIC X(08) VALUE 'COLFLG3 '.
045000     05  FILLER                  PIC X(08) VALUE 'COLFLG4 '.
045100     05  FILLER                  PIC X(08) VALUE 'COLFLG5 '.
045200     05  FILLER                  PIC X(08) VALUE 'COLICI  '.
045300     05  FILLER                  PIC X(08) VALUE 'COLKEY  '.
045400     05  FILLER                  PIC X(08) VALUE 'COLPCT  '.
045500     05  FILLER                  PIC X(08) VALUE 'CSTALLFS'.
045600     05  FILLER                  PIC X(08) VALUE 'CSTCAFS '.
045700     05  FILLER                  PIC X(08) VALUE 'CSTCIFS '.
045800     05  FILLER                  PIC X(08) VALUE 'CSTTOTAL'.
045900     05  FILLER                  PIC X(08) VALUE 'CSTUFS  '.
046000     05  FILLER                  PIC X(08) VALUE 'CSTUNUSD'.
046100     05  FILLER                  PIC X(08) VALUE 'CSTUSDFS'.
046200     05  FILLER                  PIC X(08) VALUE 'DSNAME  '.
046300     05  FILLER                  PIC X(08) VALUE 'ENVIRON '.
046400     05  FILLER                  PIC X(08) VALUE 'EXTENTS '.
046500     05  FILLER                  PIC X(08) VALUE 'FREECA  '.
046600     05  FILLER                  PIC X(08) VALUE 'FREECI  '.
046700     05  FILLER                  PIC X(08) VALUE 'FREECIP1'.
046800     05  FILLER                  PIC X(08) VALUE 'FREECIP2'.
046900     05  FILLER                  PIC X(08) VALUE 'FREECIP3'.
047000     05  FILLER                  PIC X(08) VALUE 'FREECIP4'.
047100     05  FILLER                  PIC X(08) VALUE 'FREECIP5'.
047200     05  FILLER                  PIC X(08) VALUE 'FREECIP6'.
047300     05  FILLER                  PIC X(08) VALUE 'FREECIP7'.
047400     05  FILLER                  PIC X(08) VALUE 'FREECIP8'.
047500     05  FILLER                  PIC X(08) VALUE 'FREECIP9'.
047600     05  FILLER                  PIC X(08) VALUE 'INDEXNAM'.
047700     05  FILLER                  PIC X(08) VALUE 'INDXPRIM'.
047800     05  FILLER                  PIC X(08) VALUE 'INDXSEC '.
047900     05  FILLER                  PIC X(08) VALUE 'JOBNAME '.
048000     05  FILLER                  PIC X(08) VALUE 'KEYLEN  '.
048100     05  FILLER                  PIC X(08) VALUE 'KEYOFF  '.
048200     05  FILLER                  PIC X(08) VALUE 'MACHINE '.
048300     05  FILLER                  PIC X(08) VALUE 'MAXLRECL'.
048400     05  FILLER                  PIC X(08) VALUE 'MSGCLASS'.
048500     05  FILLER                  PIC X(08) VALUE 'NEWCAFP '.
048600     05  FILLER                  PIC X(08) VALUE 'NEWCIFP '.
048700     05  FILLER                  PIC X(08) VALUE 'NEWDCIS '.
048800     05  FILLER                  PIC X(08) VALUE 'NEWICIS '.
048900     05  FILLER                  PIC X(08) VALUE 'NEWPRIM '.
049000     05  FILLER                  PIC X(08) VALUE 'NEWSEC  '.
049100     05  FILLER                  PIC X(08) VALUE 'OLDCAFP '.
049200     05  FILLER                  PIC X(08) VALUE 'OLDCIFP '.
049300     05  FILLER                  PIC X(08) VALUE 'OLDDCIS '.
049400     05  FILLER                  PIC X(08) VALUE 'OLDICIS '.
049500     05  FILLER                  PIC X(08) VALUE 'OLDPRIM '.
049600     05  FILLER                  PIC X(08) VALUE 'OLDSEC  '.
049700     05  FILLER                  PIC X(08) VALUE 'PCTALLFS'.
049800     05  FILLER                  PIC X(08) VALUE 'PCTCAFS '.
049900     05  FILLER                  PIC X(08) VALUE 'PCTCIFS '.
050000     05  FILLER                  PIC X(08) VALUE 'PCTUFS  '.
050100     05  FILLER                  PIC X(08) VALUE 'PCTUNUSD'.
050200     05  FILLER                  PIC X(08) VALUE 'PCTUSDFS'.
050300     05  FILLER                  PIC X(08) VALUE 'PCTUSED '.
050400     05  FILLER                  PIC X(08) VALUE 'PDSMEM  '.
050500     05  FILLER                  PIC X(08) VALUE 'PRIMARY '.
050600     05  FILLER                  PIC X(08) VALUE 'RECCNT  '.
050700     05  FILLER                  PIC X(08) VALUE 'RECDEL  '.
050800     05  FILLER                  PIC X(08) VALUE 'RECINS  '.
050900     05  FILLER                  PIC X(08) VALUE 'RECPCYL '.
051000     05  FILLER                  PIC X(08) VALUE 'RECREAD '.
051100     05  FILLER                  PIC X(08) VALUE 'RECTOTAL'.
051200     05  FILLER                  PIC X(08) VALUE 'RECUPD  '.
051300     05  FILLER                  PIC X(08) VALUE 'SAVEDCYL'.
051400     05  FILLER                  PIC X(08) VALUE 'SAVEDDOL'.
051500     05  FILLER                  PIC X(08) VALUE 'SECNDARY'.
051600     05  FILLER                  PIC X(08) VALUE 'SHROPTNS'.
051700     05  FILLER                  PIC X(08) VALUE 'SPACTYPE'.
051800     05  FILLER                  PIC X(08) VALUE 'SPANNED '.
051900     05  FILLER                  PIC X(08) VALUE 'SPLITSCA'.
052000     05  FILLER                  PIC X(08) VALUE 'SPLITSCI'.
052100     05  FILLER                  PIC X(08) VALUE 'TAVGLREC'.
052200     05  FILLER                  PIC X(08) VALUE 'VOLSER  '.
052300     05  FILLER                  PIC X(08) VALUE 'VOLUME  '.
052400     05  FILLER                  PIC X(08) VALUE 'VSMAVGL '.
052500     05  FILLER                  PIC X(08) VALUE 'VSMKEYL '.
052600     05  FILLER                  PIC X(08) VALUE 'VSMREORG'.
052700     05  FILLER                  PIC X(08) VALUE 'ZEDLMSG '.
052800     05  FILLER                  PIC X(08) VALUE 'ZEDSMSG '.
052900     05  FILLER                  PIC X(08) VALUE 'ZMONTH  '.
053000     05  FILLER                  PIC X(08) VALUE 'ZSYSID  '.
053100     05  FILLER                  PIC X(08) VALUE 'ZTDSELS '.
053200     05  FILLER                  PIC X(08) VALUE 'ZTIME   '.
053300     05  FILLER                  PIC X(08) VALUE 'ZUSER   '.
053400     05  FILLER                  PIC X(08) VALUE 'ZYEAR   '.
053500
053600******************************************************************
053700*    ISPF-VARIABLE-LIST IS USED BY THE VDEFINE SERVICE TO        *
053800*                      IDENTIFY THE VARIABLE(S) WHOSE STORAGE IS *
053900*                      TO BE USED. EACH VARIABLE HERE CORRESPONDS*
054000*                      BY POSITION TO AN ISPF VARIABLE IN THE    *
054100*                      NAME LIST, SO THERE MUST BE AS MANY       *
054200*                      VARIABLE NAMES AS THERE ARE ISPF NAMES.   *
054300******************************************************************
054400 01  ISPF-VARIABLE-LIST.
054500     05  AACLOIFL                        PIC 9(08) COMP.
054600     05  AACLOILL                        PIC 9(08) COMP.
054700     05  AACLOINV                        PIC 9(08) COMP.
054800     05  AACLOIVL                        PIC 9(08) COMP.
054900     05  AALOIFL                         PIC 9(08) COMP.
055000     05  AALOILL                         PIC 9(08) COMP.
055100     05  AALOINV                         PIC 9(08) COMP.
055200     05  AALOIVL                         PIC 9(08) COMP.
055300     05  ABCODE                          PIC X(04).
055400     05  ABFUNC                          PIC X(08).
055500     05  ABMISC                          PIC X(70).
055600     05  ABMSG                           PIC X(70).
055700     05  ABPARA                          PIC X(30).
055800     05  ABVSAM                          PIC X(02).
055900     05  ADDRECS                         PIC ZZZZ,ZZ9.
056000     05  ALLOCCYL                        PIC ZZZZ9.
056100     05  ARECSZ                          PIC ZZZZ9.
056200     05  AVGLRECL                        PIC ZZZZ9.
056300     05  AVGLRECT                        PIC ZZZZ9.
056400     05  BKUPHLQ                         PIC X(08).
056500     05  BMCFLAG                         PIC X(01).
056600     05  CIFBYTES                        PIC ZZZZ9.
056700     05  CIPERCA                         PIC 99999.
056800     05  CISIZED                         PIC ZZZZ9.
056900     05  CISIZED2                        PIC 9(05).
057000     05  CISIZEI                         PIC ZZZZ9.
057100     05  COLALC                          PIC X(08).
057200     05  COLCAS                          PIC X(08).
057300     05  COLCIP                          PIC X(08).
057400     05  COLCIS                          PIC X(08).
057500     05  COLDCI                          PIC X(08).
057600     05  COLEXT                          PIC X(08).
057700     05  COLFCA                          PIC X(08).
057800     05  COLFCI                          PIC X(08).
057900     05  COLFLG1                         PIC X(08).
058000     05  COLFLG2                         PIC X(08).
058100     05  COLFLG3                         PIC X(08).
058200     05  COLFLG4                         PIC X(08).
058300     05  COLFLG5                         PIC X(08).
058400     05  COLICI                          PIC X(08).
058500     05  COLKEY                          PIC X(08).
058600     05  COLPCT                          PIC X(08).
058700     05  CSTALLFS                        PIC ZZZZZZ,ZZ9.99.
058800     05  CSTCAFS                         PIC ZZZZZZ,ZZ9.99.
058900     05  CSTCIFS                         PIC ZZZZZZ,ZZ9.99.
059000     05  CSTTOTAL                        PIC ZZZZZZ,ZZ9.99.
059100     05  CSTUFS                          PIC ZZZZZZ,ZZ9.99.
059200     05  CSTUNUSD                        PIC ZZZZZZ,ZZ9.99.
059300     05  CSTUSDFS                        PIC ZZZZZZ,ZZ9.99.
059400     05  DSNAME                          PIC X(44).
059500     05  ENVIRON                         PIC X(01).
059600     05  EXTENTS                         PIC ZZZZ9.
059700     05  FREECA                          PIC ZZ9.
059800     05  FREECI                          PIC ZZ9.
059900     05  FREECIP1                        PIC ZZ9.
060000     05  FREECIP2                        PIC ZZ9.
060100     05  FREECIP3                        PIC ZZ9.
060200     05  FREECIP4                        PIC ZZ9.
060300     05  FREECIP5                        PIC ZZ9.
060400     05  FREECIP6                        PIC ZZ9.
060500     05  FREECIP7                        PIC ZZ9.
060600     05  FREECIP8                        PIC ZZ9.
060700     05  FREECIP9                        PIC ZZ9.
060800     05  INDEXNAM                        PIC X(44).
060900     05  INDXPRIM                        PIC 9(08) COMP.
061000     05  INDXSEC                         PIC 9(08) COMP.
061100     05  JOBNAME                         PIC X(08).
061200     05  KEYLEN                          PIC ZZZZ9.
061300     05  KEYOFF                          PIC ZZZZ9.
061400     05  MACHINE                         PIC X(04).
061500     05  MAXLRECL                        PIC ZZZZ9.
061600     05  MSGCLASS                        PIC X(01).
061700     05  NEWCAFP                         PIC ZZ9.
061800     05  NEWCIFP                         PIC ZZ9.
061900     05  NEWDCIS                         PIC ZZZZ9.
062000     05  NEWICIS                         PIC ZZZZ9.
062100     05  NEWPRIM                         PIC 9(08) COMP.
062200     05  NEWSEC                          PIC 9(08) COMP.
062300     05  OLDCAFP                         PIC ZZ9.
062400     05  OLDCIFP                         PIC ZZ9.
062500     05  OLDDCIS                         PIC ZZZZ9.
062600     05  OLDICIS                         PIC ZZZZ9.
062700     05  OLDPRIM                         PIC ZZZZ9.
062800     05  OLDSEC                          PIC ZZZZ9.
062900     05  PCTALLFS                        PIC ZZ9.99.
063000     05  PCTCAFS                         PIC ZZ9.99.
063100     05  PCTCIFS                         PIC ZZ9.99.
063200     05  PCTUFS                          PIC ZZ9.99.
063300     05  PCTUNUSD                        PIC ZZ9.99.
063400     05  PCTUSDFS                        PIC ZZ9.99.
063500     05  PCTUSED                         PIC ZZ9.99.
063600     05  PDSMEM                          PIC X(41).
063700     05  PRIMARY                         PIC ZZZZ9.
063800     05  RECCNT                          PIC ZZZZZZZZZ9.
063900     05  RECDEL                          PIC ZZZZZZ,ZZ9.
064000     05  RECINS                          PIC ZZZZZZ,ZZ9.
064100     05  RECPCYL                         PIC ZZZZ9.
064200     05  RECREAD                         PIC ZZZZZZ,ZZ9.
064300     05  RECTOTAL                        PIC ZZZZZZZZ9.
064400     05  RECUPD                          PIC ZZZZZZ,ZZ9.
064500     05  SAVEDCYL                        PIC ZZZZ9-.
064600     05  SAVEDDOL                        PIC ZZZZZ,ZZ9.99-.
064700     05  SECNDARY                        PIC ZZZZ9.
064800     05  SHROPTNS                        PIC X(03).
064900     05  SPACTYPE                        PIC X(04).
065000     05  SPANNED                         PIC X(01).
065100     05  SPLITSCA                        PIC ZZZZ9.
065200     05  SPLITSCI                        PIC ZZZZ9.
065300     05  TAVGLREC                        PIC ZZZZ9.
065400     05  VOLSER                          PIC X(06).
065500     05  VOLUME                          PIC X(09).
065600     05  VSMAVGL                         PIC X(03).
065700     05  VSMKEYL                         PIC X(03).
065800     05  VSMREORG                        PIC X(03).
065900     05  ZEDLMSG                         PIC X(512).
066000     05  ZEDSMSG                         PIC X(24).
066100     05  ZMONTH                          PIC X(02).
066200     05  ZSYSID                          PIC X(04).
066300     05  ZTDSELS                         PIC 9(08) COMP.
066400     05  ZTIME                           PIC X(05).
066500     05  ZUSER                           PIC X(08).
066600     05  ZYEAR                           PIC X(02).
066700
066800*****************************************************************
066900* ISPF-FORMAT-LIST HAS AS MANY FILLERS AS THERE ARE VARIABLES BEING
067000*                  DEFINED.
067100*****************************************************************
067200 01  ISPF-FORMAT-LIST.
067300     05  FILLER                          PIC X(08) VALUE 'FIXED'. AACLOIFL
067400     05  FILLER                          PIC X(08) VALUE 'FIXED'. AACLOILL
067500     05  FILLER                          PIC X(08) VALUE 'FIXED'. AACLOINV
067600     05  FILLER                          PIC X(08) VALUE 'FIXED'. AACLOIVL
067700     05  FILLER                          PIC X(08) VALUE 'FIXED'. AALOIFL
067800     05  FILLER                          PIC X(08) VALUE 'FIXED'. AALOILL
067900     05  FILLER                          PIC X(08) VALUE 'FIXED'. AALOINV
068000     05  FILLER                          PIC X(08) VALUE 'FIXED'. AALOIVL
068100     05  FILLER                          PIC X(08) VALUE 'CHAR'.  ABCODE
068200     05  FILLER                          PIC X(08) VALUE 'CHAR'.  ABFUNC
068300     05  FILLER                          PIC X(08) VALUE 'CHAR'.  ABMISC
068400     05  FILLER                          PIC X(08) VALUE 'CHAR'.  ABMSG
068500     05  FILLER                          PIC X(08) VALUE 'CHAR'.  ABPARA
068600     05  FILLER                          PIC X(08) VALUE 'CHAR'.  ABVSAM
068700     05  FILLER                          PIC X(08) VALUE 'CHAR'.  ADDRECS
068800     05  FILLER                          PIC X(08) VALUE 'CHAR'.  ALLOCCYL
068900     05  FILLER                          PIC X(08) VALUE 'CHAR'.  ARECSZ
069000     05  FILLER                          PIC X(08) VALUE 'CHAR'.  AVGLRECL
069100     05  FILLER                          PIC X(08) VALUE 'CHAR'.  AVGLRECT
069200     05  FILLER                          PIC X(08) VALUE 'CHAR'.  BKUPHLQ
069300     05  FILLER                          PIC X(08) VALUE 'CHAR'.  BMCFLAG
069400     05  FILLER                          PIC X(08) VALUE 'CHAR'.  CIFBYTES
069500     05  FILLER                          PIC X(08) VALUE 'CHAR'.  CIPERCA
069600     05  FILLER                          PIC X(08) VALUE 'CHAR'.  CISIZED
069700     05  FILLER                          PIC X(08) VALUE 'CHAR'.  CISIZED2
069800     05  FILLER                          PIC X(08) VALUE 'CHAR'.  CISIZEI
069900     05  FILLER                          PIC X(08) VALUE 'CHAR'.  COLALC
070000     05  FILLER                          PIC X(08) VALUE 'CHAR'.  COLCAS
070100     05  FILLER                          PIC X(08) VALUE 'CHAR'.  COLCIP
070200     05  FILLER                          PIC X(08) VALUE 'CHAR'.  COLCIS
070300     05  FILLER                          PIC X(08) VALUE 'CHAR'.  COLDCI
070400     05  FILLER                          PIC X(08) VALUE 'CHAR'.  COLEXT
070500     05  FILLER                          PIC X(08) VALUE 'CHAR'.  COLFCA
070600     05  FILLER                          PIC X(08) VALUE 'CHAR'.  COLFCI
070700     05  FILLER                          PIC X(08) VALUE 'CHAR'.  COLFLG1
070800     05  FILLER                          PIC X(08) VALUE 'CHAR'.  COLFLG2
070900     05  FILLER                          PIC X(08) VALUE 'CHAR'.  COLFLG3
071000     05  FILLER                          PIC X(08) VALUE 'CHAR'.  COLFLG4
071100     05  FILLER                          PIC X(08) VALUE 'CHAR'.  COLFLG5
071200     05  FILLER                          PIC X(08) VALUE 'CHAR'.  COLICI
071300     05  FILLER                          PIC X(08) VALUE 'CHAR'.  COLKEY
071400     05  FILLER                          PIC X(08) VALUE 'CHAR'.  COLPCT
071500     05  FILLER                          PIC X(08) VALUE 'CHAR'.  CSTALLFS
071600     05  FILLER                          PIC X(08) VALUE 'CHAR'.  CSTCAFS
071700     05  FILLER                          PIC X(08) VALUE 'CHAR'.  CSTCIFS
071800     05  FILLER                          PIC X(08) VALUE 'CHAR'.  CSTTOTAL
071900     05  FILLER                          PIC X(08) VALUE 'CHAR'.  CSTUFS
072000     05  FILLER                          PIC X(08) VALUE 'CHAR'.  CSTUNUSD
072100     05  FILLER                          PIC X(08) VALUE 'CHAR'.  CSTUSDFS
072200     05  FILLER                          PIC X(08) VALUE 'CHAR'.  DSNAME
072300     05  FILLER                          PIC X(08) VALUE 'CHAR'.  ENVIRON
072400     05  FILLER                          PIC X(08) VALUE 'CHAR'.  EXTENTS
072500     05  FILLER                          PIC X(08) VALUE 'CHAR'.  FREECA
072600     05  FILLER                          PIC X(08) VALUE 'CHAR'.  FREECI
072700     05  FILLER                          PIC X(08) VALUE 'CHAR'.  FREECIP1
072800     05  FILLER                          PIC X(08) VALUE 'CHAR'.  FREECIP2
072900     05  FILLER                          PIC X(08) VALUE 'CHAR'.  FREECIP3
073000     05  FILLER                          PIC X(08) VALUE 'CHAR'.  FREECIP4
073100     05  FILLER                          PIC X(08) VALUE 'CHAR'.  FREECIP5
073200     05  FILLER                          PIC X(08) VALUE 'CHAR'.  FREECIP6
073300     05  FILLER                          PIC X(08) VALUE 'CHAR'.  FREECIP7
073400     05  FILLER                          PIC X(08) VALUE 'CHAR'.  FREECIP8
073500     05  FILLER                          PIC X(08) VALUE 'CHAR'.  FREECIP9
073600     05  FILLER                          PIC X(08) VALUE 'CHAR'.  INDEXNAM
073700     05  FILLER                          PIC X(08) VALUE 'FIXED'. INDXPRIM
073800     05  FILLER                          PIC X(08) VALUE 'FIXED'. INDXSEC
073900     05  FILLER                          PIC X(08) VALUE 'CHAR'.  JOBNAME
074000     05  FILLER                          PIC X(08) VALUE 'CHAR'.  KEYLEN
074100     05  FILLER                          PIC X(08) VALUE 'CHAR'.  KEYOFF
074200     05  FILLER                          PIC X(08) VALUE 'CHAR'.  MACHINE
074300     05  FILLER                          PIC X(08) VALUE 'CHAR'.  MAXLRECL
074400     05  FILLER                          PIC X(08) VALUE 'CHAR'.  MSGCLASS
074500     05  FILLER                          PIC X(08) VALUE 'CHAR'.  NEWCAFP
074600     05  FILLER                          PIC X(08) VALUE 'CHAR'.  NEWCIFP
074700     05  FILLER                          PIC X(08) VALUE 'CHAR'.  NEWDCIS
074800     05  FILLER                          PIC X(08) VALUE 'CHAR'.  NEWICIS
074900     05  FILLER                          PIC X(08) VALUE 'FIXED'. NEWPRIM
075000     05  FILLER                          PIC X(08) VALUE 'FIXED'. NEWSEC
075100     05  FILLER                          PIC X(08) VALUE 'CHAR'.  OLDCAFP
075200     05  FILLER                          PIC X(08) VALUE 'CHAR'.  OLDCIFP
075300     05  FILLER                          PIC X(08) VALUE 'CHAR'.  OLDDCIS
075400     05  FILLER                          PIC X(08) VALUE 'CHAR'.  OLDICIS
075500     05  FILLER                          PIC X(08) VALUE 'CHAR'.  OLDPRIM
075600     05  FILLER                          PIC X(08) VALUE 'CHAR'.  OLDSEC
075700     05  FILLER                          PIC X(08) VALUE 'CHAR'.  PCTALLFS
075800     05  FILLER                          PIC X(08) VALUE 'CHAR'.  PCTCAFS
075900     05  FILLER                          PIC X(08) VALUE 'CHAR'.  PCTCIFS
076000     05  FILLER                          PIC X(08) VALUE 'CHAR'.  PCTUFS
076100     05  FILLER                          PIC X(08) VALUE 'CHAR'.  PCTUNUSD
076200     05  FILLER                          PIC X(08) VALUE 'CHAR'.  PCTUSDFS
076300     05  FILLER                          PIC X(08) VALUE 'CHAR'.  PCTUSED
076400     05  FILLER                          PIC X(08) VALUE 'CHAR'.  PDSMEM
076500     05  FILLER                          PIC X(08) VALUE 'CHAR'.  PRIMARY
076600     05  FILLER                          PIC X(08) VALUE 'CHAR'.  RECCNT
076700     05  FILLER                          PIC X(08) VALUE 'CHAR'.  RECDEL
076800     05  FILLER                          PIC X(08) VALUE 'CHAR'.  RECINS
076900     05  FILLER                          PIC X(08) VALUE 'CHAR'.  RECPCYL
077000     05  FILLER                          PIC X(08) VALUE 'CHAR'.  RECREAD
077100     05  FILLER                          PIC X(08) VALUE 'CHAR'.  RECTOTAL
077200     05  FILLER                          PIC X(08) VALUE 'CHAR'.  RECUPD
077300     05  FILLER                          PIC X(08) VALUE 'CHAR'.  SAVEDCYL
077400     05  FILLER                          PIC X(08) VALUE 'CHAR'.  SAVEDDOL
077500     05  FILLER                          PIC X(08) VALUE 'CHAR'.  SECNDARY
077600     05  FILLER                          PIC X(08) VALUE 'CHAR'.  SHROPTNS
077700     05  FILLER                          PIC X(08) VALUE 'CHAR'.  SPACTYPE
077800     05  FILLER                          PIC X(08) VALUE 'CHAR'.  SPANNED
077900     05  FILLER                          PIC X(08) VALUE 'CHAR'.  SPLITSCA
078000     05  FILLER                          PIC X(08) VALUE 'CHAR'.  SPLITSCI
078100     05  FILLER                          PIC X(08) VALUE 'CHAR'.  TAVGLREC
078200     05  FILLER                          PIC X(08) VALUE 'CHAR'.  VOLSER
078300     05  FILLER                          PIC X(08) VALUE 'CHAR'.  VOLUME
078400     05  FILLER                          PIC X(08) VALUE 'CHAR'.  VSMAVGL
078500     05  FILLER                          PIC X(08) VALUE 'CHAR'.  VSMKEYL
078600     05  FILLER                          PIC X(08) VALUE 'CHAR'.  VSMREORG
078700     05  FILLER                          PIC X(08) VALUE 'CHAR'.  ZEDLMSG
078800     05  FILLER                          PIC X(08) VALUE 'CHAR'.  ZEDSMSG
078900     05  FILLER                          PIC X(08) VALUE 'CHAR'.  ZMONTH
079000     05  FILLER                          PIC X(08) VALUE 'CHAR'.  ZSYSID
079100     05  FILLER                          PIC X(08) VALUE 'FIXED'. ZTDSELS
079200     05  FILLER                          PIC X(08) VALUE 'CHAR'.  ZTIME
079300     05  FILLER                          PIC X(08) VALUE 'CHAR'.  ZUSER
079400     05  FILLER                          PIC X(08) VALUE 'CHAR'.  ZYEAR
079500******************************************************************
079600*       END OF WORKING-STORAGE FIELDS FOR ISPF SERVICE CALLS     *
079700******************************************************************
079800     EJECT
079900
080000 01  WS-CIS-FOR-INDEX-SET                PIC 9(09) COMP-3.
080100 01  WS-TOTAL-TRACKS-IN-FILE             PIC 9(09) COMP-3.
080200 01  WS-HIGH-USED-RBA                    PIC 9(13) COMP-3.
080300 01  WS-HIGH-ALLOCATED-RBA               PIC 9(13) COMP-3.
080400 01  WS-RECORDS-PER-CYLINDER             PIC 9(09)V9(02) COMP-3.  RECPCYL
080500 01  WS-CALC-RECORDS-PER-CYLINDER        PIC 9(09)V9(02) COMP-3.        L
080600 01  WS-ALLOCATED-CYLINDERS              PIC 9(09) COMP-3.        ALLOCCYL
080700 01  WS-RECORDS-IN-FILE                  PIC 9(13) COMP-3.        RECTOTAL
080800 01  WS-FREESPACE-PERCENT-CI             PIC 9(03).               FREECI
080900 01  WS-FREESPACE-PERCENT-CA             PIC 9(03).               FREECA
081000 01  WS-NEW-ANNUAL-FILE-COST             PIC 9(09)V9(02) COMP-3.
081100 01  WS-CI-FREESPACE-COST                PIC 9(09)V9(02) COMP-3.  CSTCIFS
081200 01  WS-CA-FREESPACE-COST                PIC 9(09)V9(02) COMP-3.  CSTCAFS
081300 01  WS-FREESPACE-COST                   PIC 9(09)V9(02) COMP-3.  CSTALLFS
081400 01  WS-FREE-AND-UNUSED-COST             PIC 9(09)V9(02) COMP-3.  CSTUFS
081500 01  WS-FREE-AND-USED-COST               PIC 9(09)V9(02) COMP-3.  CSTUSDFS
081600 01  WS-UNUSED-SPACE-COST                PIC 9(09)V9(02) COMP-3.  CSTUNUSD
081700 01  WS-ANNUAL-COST-OF-FILE              PIC 9(09)V9(02) COMP-3.  CSTTOTAL
081800 01  WS-CI-FREESPACE-PCT-OF-COST         PIC 9(03)V9(02) COMP-3.  PCTCIFS
081900 01  WS-CA-FREESPACE-PCT-OF-COST         PIC 9(03)V9(02) COMP-3.  PCTCAFS
082000 01  WS-FREESPACE-PCT-OF-COST            PIC 9(03)V9(02) COMP-3.  PCTALLFS
082100 01  WS-FREE-AND-UNUSED-PCT-OF-COST      PIC 9(03)V9(02) COMP-3.  PCTUFS
082200 01  WS-FREE-AND-USED-PCT-OF-COST        PIC 9(03)V9(02) COMP-3.  PCTUSDFS
082300 01  WS-UNUSED-SPACE-PCT-OF-COST         PIC 9(03)V9(02) COMP-3.  PCTUNUSD
082400 01  WS-DATA-CISIZE                      PIC 9(05).               CISIZED
082500 01  WS-INDEX-CISIZE                     PIC 9(05).               CISIZEI
082600 01  WS-KEY-LENGTH                       PIC 9(05)       COMP-3.  KEYLEN
082700 01  WS-EXTENTS                          PIC 9(05)       COMP-3.  EXTENTS
082800 01  WS-CI-SPLITS                        PIC 9(05)       COMP-3.  SPLITSCI
082900 01  WS-CA-SPLITS                        PIC 9(05)       COMP-3.  SPLITSCA
083000 01  WS-TRUE-AVERAGE-LRECL               PIC 9(05)       COMP-3.  AVGLRECT
083100 01  WS-LISTCAT-AVERAGE-LRECL            PIC 9(05)       COMP-3.  AVGLRECL
083200 01  WS-LISTCAT-MAXIMUM-LRECL            PIC 9(05)       COMP-3.  MAXLRECL
083300 01  WS-CI-FREE-BYTES                    PIC 9(05)       COMP-3.  CIFBYTES
083400 01  WS-FREE-CI-PERCENTAGE-1             PIC 9(05)V9(04) COMP-3.  FREECIP1
083500 01  WS-FREE-CI-PERCENTAGE-2             PIC 9(05)V9(04) COMP-3.  FREECIP2
083600 01  WS-FREE-CI-PERCENTAGE-3             PIC 9(05)V9(04) COMP-3.  FREECIP3
083700 01  WS-FREE-CI-PERCENTAGE-4             PIC 9(05)V9(04) COMP-3.  FREECIP4
083800 01  WS-FREE-CI-PERCENTAGE-5             PIC 9(05)V9(04) COMP-3.  FREECIP5
083900 01  WS-FREE-CI-PERCENTAGE-6             PIC 9(05)V9(04) COMP-3.  FREECIP6
084000 01  WS-FREE-CI-PERCENTAGE-7             PIC 9(05)V9(04) COMP-3.  FREECIP7
084100 01  WS-FREE-CI-PERCENTAGE-8             PIC 9(05)V9(04) COMP-3.  FREECIP8
084200 01  WS-FREE-CI-PERCENTAGE-9             PIC 9(05)V9(04) COMP-3.  FREECIP9
084300 01  WS-PERCENT-USED-UPPER-LIMIT         PIC V99         COMP-3
084400                                             VALUE .95.
084500 01  WS-PERCENT-USED-LOWER-LIMIT         PIC V99         COMP-3
084600                                             VALUE .85.
084700 01  WS-EXTENTS-UPPER-LIMIT              PIC 9(05)       COMP-3
084800                                             VALUE 10.
084900 01  WS-CISPLIT-UPPER-LIMIT              PIC 9(05)       COMP-3
085000                                             VALUE 150.
085100 01  WS-CASPLIT-UPPER-LIMIT              PIC 9(05)       COMP-3
085200                                             VALUE 50.
085300 01  WS-CI-FREE-UPPER-LIMIT              PIC 9(02) VALUE 20.
085400 01  WS-CA-FREE-UPPER-LIMIT              PIC 9(02) VALUE 15.
085500 01  WS-VSAM-PRIMARY-SPACE               PIC 9(05).
085600 01  WS-VSAM-SECONDARY-SPACE             PIC 9(05).
085700 01  WS-BLOCKS-PER-TRACK                 PIC 9(05) COMP-3.
085800 01  WS-CI-OVERHEAD                      PIC 9(05) COMP-3.
085900 01  WS-RECORDS-PER-CI                   PIC 9(05) COMP-3.
086000 01  WS-LOADED-CIS-PER-CA                PIC 9(05) COMP-3.
086100 01  WS-CI-PER-CA                        PIC 9(05) COMP-3.        CIPERCA
086200
086300 01  VSAM-STATUS                         PIC X(02).
086400     88  VSAM-SUCCESSFUL                     VALUE '00'.
086500     88  VSAM-NOT-FOUND                      VALUE '23'.
086600     88  VSAM-END-OF-FILE                    VALUE '10'.
086700
086800 01  WS-ABEND-CODE                       PIC S9(4) COMP
086900                                                  VALUE ZEROES.
087000
087100 01  END-OF-FILE-SW                      PIC X(01) VALUE 'N'.
087200     88  END-OF-FILE                         VALUE 'Y'.
087300
087400 01  WS-DATE.
087500     05  WS-DATE-YY                      PIC X(02).
087600     05  WS-DATE-MM                      PIC X(02).
087700     05  WS-DATE-DD                      PIC X(02).
087800
087900 01  WS-PERCENT-FILE-USED                PIC 9(03)V9(08) COMP-3.
088000 01  WS-TRUE-PERCENT-FILE-USED           PIC 9(03)V9(08) COMP-3.
088100
088200 01  OFFSET                              PIC 9(03) VALUE ZEROES.
088300
088400 01  WS-DAILY-GB-COST                    PIC S9(02)V99 COMP-3
088500                                             VALUE +19.82.
088600 01  WS-GIGABYTE-PER-CYL                 PIC SV9(06) COMP-3
088700                                             VALUE +.000811.
088800 01  WS-TRACKS-PER-CYL                   PIC 9(3)    COMP-3
088900                                             VALUE 15.
089000
089100 01  WS-CA-SPLITS-DISTORTION             PIC S9(2)V9(06) COMP-3.
089200 01  WS-CI-SPLITS-DISTORTION             PIC S9(2)V9(06) COMP-3.
089300
089400 01  WS-ALPHA                            PIC X(11) JUST RIGHT.
089500 01  WS-ALPHA-ZD  REDEFINES  WS-ALPHA    PIC 9(11).
089600
089700 01  WS-OLD-TOTAL-DOLLARS                PIC S9(09)V99 COMP-3
089800                                             VALUE +0.
089900 01  WS-NEW-TOTAL-DOLLARS                PIC S9(09)V99 COMP-3
090000                                             VALUE +0.
090100 01  WS-OLD-TOTAL-CYLS                   PIC S9(09)V99 COMP-3
090200                                             VALUE +0.
090300 01  WS-NEW-TOTAL-CYLS                   PIC S9(09)V99 COMP-3
090400                                             VALUE +0.
090500 01  LINE-COUNT-ER                       PIC 9(06) VALUE 100.
090600 01  PAGE-COUNT-ER                       PIC 9(06) VALUE 0.
090700 01  LINE-COUNT-CR                       PIC 9(06) VALUE 100.
090800 01  PAGE-COUNT-CR                       PIC 9(06) VALUE 0.
090900
091000 01  END-OF-DSN-FILE-SW                  PIC X(01) VALUE 'N'.
091100     88  END-OF-DSN-FILE                     VALUE 'Y'.
091200
091300 01  WS-ALTERNATE-INDEX-SW               PIC X(01) VALUE 'N'.
091400     88  ALTERNATE-INDEX                     VALUE 'Y'.
091500
091600 01  WS-IMBEDDED-FILE-SW                 PIC X(01) VALUE 'N'.
091700     88  IMBEDDED-FILE                       VALUE 'Y'.
091800
091900 01  WS-RECOVERY-SW                      PIC X(01) VALUE 'N'.
092000     88  RECOVERY-FLAG                       VALUE 'Y'.
092100
092200 01  WS-WRITECHK-SW                      PIC X(01) VALUE 'N'.
092300     88  WRITECHK-FLAG                       VALUE 'Y'.
092400
092500 01  WS-REPLICAT-SW                      PIC X(01) VALUE 'N'.
092600     88  REPLICAT-FLAG                       VALUE 'Y'.
092700
092800 01  WS-ERASE-SW                         PIC X(01) VALUE 'N'.
092900     88  ERASE-FLAG                          VALUE 'Y'.
093000
093100 01  TITLE-LINE-1.
093200     05  FILLER                          PIC X(01) VALUE '1'.
093300     05  FILLER                          PIC X(36)
093400           VALUE '  VSAMPGM                          '.
093500     05  FILLER                          PIC X(56) VALUE
093600      '            VSAM FILE ANALYSIS ROUTINE                  '.
093700     05  FILLER                          PIC X(09) VALUE SPACES.
093800     05  TL-RUN-DATE.
093900         10  TL-RUN-DATE-MM              PIC X(02).
094000         10  FILLER                      PIC X(01) VALUE '/'.
094100         10  TL-RUN-DATE-DD              PIC X(02).
094200         10  FILLER                      PIC X(01) VALUE '/'.
094300         10  TL-RUN-DATE-YY              PIC X(02).
094400     05  FILLER                          PIC X(10) VALUE SPACES.
094500     05  FILLER                          PIC X(05) VALUE 'PAGE '.
094600     05  TL-PAGENO                       PIC ZZZ9.
094700
094800 01  TITLE-LINE-ER-2.
094900     05  FILLER                          PIC X(01) VALUE SPACE.
095000     05  FILLER                          PIC X(47) VALUE SPACES.
095100     05  FILLER                          PIC X(38) VALUE
095200         'VSAM SPACE MANAGEMENT-EXCEPTION REPORT'.
095300
095400 01  TITLE-LINE-ER-3.
095500     05  FILLER                          PIC X(01) VALUE SPACE.
095600     05  FILLER                          PIC X(40) VALUE SPACES.
095700     05  FILLER                          PIC X(20) VALUE
095800                         'BMC COMPRESSED FILES'.
095900     05  FILLER                          PIC X(33) VALUE
096000                        ' ARE FLAGGED WITH AN ''*'' IN CC''1'''.
096100
096200 01  TITLE-LINE-ER-4.
096300     05  FILLER                          PIC X(01) VALUE SPACE.
096400     05  FILLER                          PIC X(30) VALUE SPACES.
096500     05  FILLER                          PIC X(34) VALUE
096600              'FILES FLAGGED WITH AN ''S'' IN CC''1'''.
096700     05  FILLER                          PIC X(38) VALUE
096800              ' ARE MONITORED ONLY. NO JCL IS CREATED'.
096900
097000 01  TITLE-LINE-CR-2.
097100     05  FILLER                          PIC X(01) VALUE SPACE.
097200     05  FILLER                          PIC X(42) VALUE SPACES.
097300     05  FILLER                          PIC X(47) VALUE
097400         'VSAM SPACE MANAGEMENT-CHANGE AND SAVINGS REPORT'.
097500
097600 01  COLUMN-HEADING-ER.
097700     05  FILLER                          PIC X(01) VALUE SPACE.
097800     05  FILLER                          PIC X(01) VALUE SPACE.
097900     05  FILLER                          PIC X(39) VALUE 'DSN'.
098000     05  FILLER                          PIC X(47) VALUE
098100                                             'EXCEPTION'.
098200     05  FILLER                          PIC X(06) VALUE
098300                                             'ACTION'.
098400
098500 01  COLUMN-HEADING-CR.
098600     05  FILLER                          PIC X(01) VALUE '0'.
098700     05  FILLER                          PIC X(44) VALUE SPACES.
098800     05  FILLER                          PIC X(06) VALUE SPACES.
098900     05  FILLER                          PIC X(10) VALUE
099000                                             'OLD VALUE'.
099100     05  FILLER                          PIC X(15) VALUE SPACES.
099200     05  FILLER                          PIC X(10) VALUE
099300                                             'NEW VALUE'.
099400     05  FILLER                          PIC X(10) VALUE SPACES.
099500     05  FILLER                          PIC X(10) VALUE
099600                                             '    DELTA'.
099700
099800 01  LINE-0-CR.
099900     05  FILLER                          PIC X(01) VALUE '0'.
100000     05  CH-VSAM-DATASET-NAME-CR         PIC X(44).
100100
100200 01  LINE-1-CR.
100300     05  FILLER                          PIC X(01) VALUE ' '.
100400     05  FILLER                          PIC X(44)
100500         VALUE '  TOTAL ALLOCATION IN CYLINDERS             '.
100600     05  FILLER                          PIC X(05) VALUE SPACES.
100700     05  CR-OLD-PRIMARY                  PIC Z(9)9.
100800     05  FILLER                          PIC X(15) VALUE SPACES.
100900     05  CR-NEW-PRIMARY                  PIC Z(9)9.
101000     05  FILLER                          PIC X(10) VALUE SPACES.
101100     05  CR-CYLINDER-DIFF                PIC Z(9)9-.
101200
101300 01  LINE-2-CR.
101400     05  FILLER                          PIC X(01) VALUE SPACE.
101500     05  FILLER                          PIC X(44)
101600         VALUE '  SECONDARY SPACE (CYLINDERS)               '.
101700     05  FILLER                          PIC X(05) VALUE SPACES.
101800     05  CR-OLD-SECONDARY                PIC Z(9)9.
101900     05  FILLER                          PIC X(15) VALUE SPACES.
102000     05  CR-NEW-SECONDARY                PIC Z(9)9.
102100
102200 01  LINE-3-CR.
102300     05  FILLER                          PIC X(01) VALUE SPACE.
102400     05  FILLER                          PIC X(44)
102500         VALUE '  ANNUAL COST                               '.
102600     05  FILLER                          PIC X(04) VALUE SPACES.
102700     05  CR-OLD-COST                     PIC $$$$,$$9.99.
102800     05  FILLER                          PIC X(14) VALUE SPACES.
102900     05  CR-NEW-COST                     PIC $$$$,$$9.99.
103000     05  FILLER                          PIC X(10) VALUE SPACES.
103100     05  CR-COST-DIFF                    PIC $$$,$$9.99-.
103200
103300 01  LINE-4-CR.
103400     05  FILLER                          PIC X(01) VALUE SPACE.
103500     05  FILLER                          PIC X(44)
103600         VALUE '  CI % FREE                                 '.
103700     05  FILLER                          PIC X(05) VALUE SPACES.
103800     05  CR-OLD-CI-FREE                  PIC Z(8)Z9.
103900     05  FILLER                          PIC X(15) VALUE SPACES.
104000     05  CR-NEW-CI-FREE                  PIC Z(8)Z9.
104100
104200 01  LINE-5-CR.
104300     05  FILLER                          PIC X(01) VALUE SPACE.
104400     05  FILLER                          PIC X(44)
104500         VALUE '  CA % FREE                                 '.
104600     05  FILLER                          PIC X(05) VALUE SPACES.
104700     05  CR-OLD-CA-FREE                  PIC Z(8)Z9.
104800     05  FILLER                          PIC X(15) VALUE SPACES.
104900     05  CR-NEW-CA-FREE                  PIC Z(8)Z9.
105000
105100 01  LINE-6-CR.
105200     05  FILLER                          PIC X(01) VALUE SPACE.
105300     05  FILLER                          PIC X(44)
105400         VALUE '  DATA CI SIZE                              '.
105500     05  FILLER                          PIC X(05) VALUE SPACES.
105600     05  CR-OLD-DATA-CISIZE              PIC Z(9)9.
105700     05  FILLER                          PIC X(15) VALUE SPACES.
105800     05  CR-NEW-DATA-CISIZE              PIC Z(9)9.
105900
106000 01  LINE-7-CR.
106100     05  FILLER                          PIC X(01) VALUE SPACE.
106200     05  FILLER                          PIC X(44)
106300         VALUE '  INDEX CI SIZE                             '.
106400     05  FILLER                          PIC X(05) VALUE SPACES.
106500     05  CR-OLD-INDEX-CISIZE             PIC Z(9)9.
106600     05  FILLER                          PIC X(15) VALUE SPACES.
106700     05  CR-NEW-INDEX-CISIZE             PIC Z(9)9.
106800
106900 01  LINE-8-CR.
107000     05  FILLER                          PIC X(01) VALUE '0'.
107100     05  FILLER                          PIC X(44)
107200         VALUE '  TOTAL DOLLARS FOR THIS RUN:               '.
107300     05  FILLER                          PIC X(04) VALUE SPACES.
107400     05  CR-OLD-TOTAL-DOLLARS            PIC $$$$,$$9.99.
107500     05  FILLER                          PIC X(14) VALUE SPACES.
107600     05  CR-NEW-TOTAL-DOLLARS            PIC $$$$,$$9.99.
107700     05  FILLER                          PIC X(09) VALUE SPACES.
107800     05  CR-TOTAL-DOLLARS-SAVED          PIC $$$$,$$9.99-.
107900
108000 01  LINE-9-CR.
108100     05  FILLER                          PIC X(01) VALUE ' '.
108200     05  FILLER                          PIC X(44)
108300         VALUE '  TOTAL CYLINDERS THIS RUN:                 '.
108400     05  FILLER                          PIC X(05) VALUE SPACES.
108500     05  CR-OLD-TOTAL-CYLS               PIC Z(9)9.
108600     05  FILLER                          PIC X(15) VALUE SPACES.
108700     05  CR-NEW-TOTAL-CYLS               PIC Z(9)9.
108800     05  FILLER                          PIC X(10) VALUE SPACES.
108900     05  CR-TOTAL-CYLS-SAVED             PIC Z(9)9-.
109000
109100 01  EXCPRPT-RECORD-HOLD                 PIC X(133).
109200
109300 01  CHNGRPT-RECORD-HOLD                 PIC X(133).
109400
109500 01  VSAM-DATASET-NAME-HOLD              PIC X(44).
109600
109700 LINKAGE SECTION.
109800 01  PARM-CARD.
109900     05  PARM-LEN                        PIC S9(04) COMP.
110000     05  PARM-ENVIRONMENT                PIC X(01).
110100         88  RUNNING-IN-FOREGROUND           VALUE 'F'.
110200         88  RUNNING-IN-BACKGROUND           VALUE 'B'.
110300     05  PARM-MACHINE                    PIC X(04).
110400         88  TEST-MACHINE                    VALUE 'TEST'.
110500         88  PROD-MACHINE                    VALUE 'PROD'.
110600     05  PARM-BACKUP-HLQ                 PIC X(08).
110700     05  PARM-JOBNAME                    PIC X(08).
110800     05  PARM-MSGCLASS                   PIC X(01).
110900
111000 PROCEDURE DIVISION USING PARM-CARD.
111100
111200 0000-MAINLINE.
111300
111400     PERFORM 0003-INITIALIZATION            THRU 0003-EXIT.
111500
111600     IF RUNNING-IN-BACKGROUND
111700        PERFORM 0050-PROCESS-DSN-LIST       THRU 0050-EXIT
111800                UNTIL END-OF-DSN-FILE
111900        PERFORM 1000-FTCLOSE                THRU 1000-EXIT.
112000
112100     IF RUNNING-IN-FOREGROUND
112200        PERFORM 0050-PROCESS-DSN-LIST       THRU 0050-EXIT
112300        IF RETURN-CODE = 8
112400           PERFORM 1000-FTCLOSE             THRU 1000-EXIT
112500           GO TO 0000-TERM
112600        ELSE
112700           MOVE 'VGET (VSMREORG VSMAVGL VSMKEYL) SHARED'
112800                 TO ISPF-BUFFER
112900           CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER
113000           IF VSMREORG = 'YES' OR
113100              VSMAVGL  = 'YES' OR
113200              VSMKEYL  = 'YES'
113300                 PERFORM 0600-GENERATE-JOBS THRU 0600-EXIT
113400           ELSE
113500                 PERFORM 1000-FTCLOSE       THRU 1000-EXIT
113600           END-IF
113700     END-IF.
113800
113900 0000-TERM.
114000     PERFORM 9950-TERM                      THRU 9950-EXIT.
114100
114200     STOP RUN.
114300
114400 0000-EXIT.
114500     EXIT.
114600     EJECT
114700 0003-INITIALIZATION.
114800
114900     IF PARM-LEN NOT = 22
115000        DISPLAY 'MISSING OR TOO MUCH PARM INFORMATION'
115100        DISPLAY 'FIRST CHARACTER: F OR B (FOREGROUND/BACKGROUND)'
115200        DISPLAY 'NEXT 4:          TEST OR PROD'
115300        DISPLAY 'NEXT 8:          HLQ OF BACKUP DATASETS'
115400        DISPLAY 'NEXT 8:          JOBNAME OF GENERATED JCL'
115500        DISPLAY 'NEXT 1:          JOB MSGCLASS'
115600        MOVE 101 TO WS-ABEND-CODE
115700        CALL 'ILBOABN0' USING WS-ABEND-CODE.
115800
115900     IF PARM-ENVIRONMENT NOT = 'F' AND
116000        PARM-ENVIRONMENT NOT = 'B'
116100        DISPLAY 'MISSING OR WRONG ENVIRONMENT INFORMATION'
116200        DISPLAY 'FIRST CHARACTER: F OR B (FOREGROUND/BACKGROUND)'
116300        DISPLAY 'NEXT 4:          TEST OR PROD'
116400        DISPLAY 'NEXT 8:          HLQ OF BACKUP DATASETS'
116500        DISPLAY 'NEXT 8:          JOBNAME OF GENERATED JCL'
116600        DISPLAY 'NEXT 1:          JOB MSGCLASS'
116700        MOVE 102 TO WS-ABEND-CODE
116800        CALL 'ILBOABN0' USING WS-ABEND-CODE.
116900
117000     IF PARM-MACHINE NOT = 'TEST' AND
117100        PARM-MACHINE NOT = 'PROD'
117200        DISPLAY 'MISSING OR WRONG IMAGE INFORMATION'
117300        DISPLAY 'FIRST CHARACTER: F OR B (FOREGROUND/BACKGROUND)'
117400        DISPLAY 'NEXT 4:          TEST OR PROD'
117500        DISPLAY 'NEXT 8:          HLQ OF BACKUP DATASETS'
117600        DISPLAY 'NEXT 8:          JOBNAME OF GENERATED JCL'
117700        DISPLAY 'NEXT 1:          JOB MSGCLASS'
117800        MOVE 103 TO WS-ABEND-CODE
117900        CALL 'ILBOABN0' USING WS-ABEND-CODE.
118000
118100     IF PROD-MACHINE             AND
118200        JOBNAME = SPACES
118300        DISPLAY 'MISSING JOBNAME WHILE RUNNING PROD'
118400        DISPLAY 'FIRST CHARACTER: F OR B (FOREGROUND/BACKGROUND)'
118500        DISPLAY 'NEXT 4:          TEST OR PROD'
118600        DISPLAY 'NEXT 8:          HLQ OF BACKUP DATASETS'
118700        DISPLAY 'NEXT 8:          JOBNAME OF GENERATED JCL'
118800        DISPLAY 'NEXT 1:          JOB MSGCLASS'
118900        MOVE 104 TO WS-ABEND-CODE
119000        CALL 'ILBOABN0' USING WS-ABEND-CODE.
119100
119200     IF PARM-BACKUP-HLQ = SPACES
119300        DISPLAY 'MISSING BACKUP HIGH LEVEL QUALIFIER'
119400        DISPLAY 'FIRST CHARACTER: F OR B (FOREGROUND/BACKGROUND)'
119500        DISPLAY 'NEXT 4:          TEST OR PROD'
119600        DISPLAY 'NEXT 8:          HLQ OF BACKUP DATASETS'
119700        DISPLAY 'NEXT 8:          JOBNAME OF GENERATED JCL'
119800        DISPLAY 'NEXT 1:          JOB MSGCLASS'
119900        MOVE 105 TO WS-ABEND-CODE
120000        CALL 'ILBOABN0' USING WS-ABEND-CODE.
120100
120200     IF PARM-MSGCLASS NOT ALPHABETIC-UPPER
120300        DISPLAY 'MISSING OR BAD JOB MSGCLASS IN PARM FIELD'
120400        DISPLAY 'FIRST CHARACTER: F OR B (FOREGROUND/BACKGROUND)'
120500        DISPLAY 'NEXT 4:          TEST OR PROD'
120600        DISPLAY 'NEXT 8:          HLQ OF BACKUP DATASETS'
120700        DISPLAY 'NEXT 8:          JOBNAME OF GENERATED JCL'
120800        DISPLAY 'NEXT 1:          JOB MSGCLASS'
120900        MOVE 106 TO WS-ABEND-CODE
121000        CALL 'ILBOABN0' USING WS-ABEND-CODE.
121100
121200     IF RUNNING-IN-FOREGROUND
121300        OPEN INPUT LISTCAT.
121400
121500     IF RUNNING-IN-BACKGROUND
121600        OPEN INPUT DSNLIST.
121700
121800     OPEN INPUT  REGISET
121900          OUTPUT EXCPRPT
122000                 CHNGRPT.
122100
122200     ACCEPT WS-DATE FROM DATE.
122300     MOVE WS-DATE-YY TO TL-RUN-DATE-YY.
122400     MOVE WS-DATE-MM TO TL-RUN-DATE-MM.
122500     MOVE WS-DATE-DD TO TL-RUN-DATE-DD.
122600
122700     MOVE 'CONTROL ERRORS RETURN'      TO ISPF-BUFFER.
122800     CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER.
122900
123000     PERFORM 0005-VDEFINE                   THRU 0005-EXIT.
123100
123200     MOVE 'VSAMPGM' TO ABFUNC.
123300
123400     MOVE PARM-JOBNAME     TO JOBNAME.
123500     MOVE PARM-MSGCLASS    TO MSGCLASS.
123600     MOVE PARM-ENVIRONMENT TO ENVIRON.
123700     MOVE PARM-BACKUP-HLQ  TO BKUPHLQ.
123800     MOVE PARM-MACHINE     TO MACHINE.
123900
124000* Start file tailoring services and generate jobcard ...
124100     MOVE 'VGET (ZTEMPF)' TO ISPF-BUFFER.
124200     CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER.
124300
124400     IF RUNNING-IN-FOREGROUND
124500        MOVE 'FTOPEN TEMP' TO ISPF-BUFFER
124600     ELSE
124700        MOVE 'FTOPEN' TO ISPF-BUFFER
124800     END-IF.
124900     CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER.
125000
125100     IF RETURN-CODE NOT = 0
125200*           8 - FILE TAILORING ALREADY IN PROGRESS
125300*          12 - OUTPUT FILE IN USE; ENQ FAILED
125400*          16 - SKELETON LIBRARY AND/OR OUTPUT FILE IS NOT
125500*               ALLOCATED
125600*          20 - SEVERE ERROR
125700        IF RUNNING-IN-FOREGROUND
125800           MOVE RETURN-CODE TO ABCODE
125900           MOVE '0003-INITIALIZE' TO ABPARA
126000           MOVE 'REORG GEN FAILED' TO ABMSG
126100         MOVE 'UNABLE TO START FILE TAILORING - ALLOCATION ERROR?'
126200                             TO ABMISC
126300           MOVE VSAM-STATUS TO ABVSAM
126400           PERFORM 9999-ISPF-ABEND          THRU 9999-EXIT
126500        ELSE
126600           DISPLAY '0003-INITIALIZE'
126700           DISPLAY 'FTOPEN FOR REORG/GEN FAILED'
126800           DISPLAY
126900            'UNABLE TO START FILE TAILORING - ALLOCATION ERROR?'
127000           MOVE 107 TO WS-ABEND-CODE
127100           CALL 'ILBOABN0' USING WS-ABEND-CODE
127200        END-IF.
127300
127400     MOVE 'FTINCL AP1PVSAM' TO ISPF-BUFFER.
127500     CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER.
127600
127700     IF RETURN-CODE NOT = 0
127800*           8 - SKELETON DOES NOT EXIST
127900*          12 - SKELETON OR TABLE IN USE; ENQ FAILED
128000*          16 - DATA TRUNCATION OCCURRED; OR SKELETON LIBRARY
128100*               AND/OR OUTPUT FILE NOT ALLOCATED
128200*          20 - SEVERE ERROR
128300        IF RUNNING-IN-FOREGROUND
128400           MOVE RETURN-CODE  TO ABCODE
128500           MOVE '0600-GENERATE-JOBS' TO ABPARA
128600           MOVE 'INCLUDE SKELETON FAILED' TO ABMSG
128700           MOVE 'UNABLE TO INCLUDE SKELETON - NOT FOUND?'
128800                             TO ABMISC
128900           MOVE VSAM-STATUS  TO ABVSAM
129000           PERFORM 9999-ISPF-ABEND          THRU 9999-EXIT
129100        ELSE
129200           MOVE RETURN-CODE  TO ABCODE
129300           DISPLAY '0003-INITIALIZE'
129400           DISPLAY 'INCLUDE AP1PVSAM SKELETON FAILED'
129500           MOVE 101 TO WS-ABEND-CODE
129600           CALL 'ILBOABN0' USING WS-ABEND-CODE
129700        END-IF.
129800
129900 0003-EXIT.
130000     EXIT.
130100     EJECT
130200 0005-VDEFINE.
130300
130400*    CALL VDEFINE TO DEFINE DIALOG FUNCTION VARIABLES TO ISPF.
130500
130600     CALL 'ISPLINK' USING VDEFINE        ISPF-NAME-VDEFINE
130700                    ISPF-VARIABLE-LIST   ISPF-FORMAT-LIST
130800                    ISPF-LENGTH-LIST     ISPF-VDEFINE-OPTION.
130900
131000     PERFORM 0005C-VERIFY-WS-INTEGRITY      THRU 0005C-EXIT.
131100
131200 0005-EXIT.
131300     EXIT.
131400     EJECT
131500 0005C-VERIFY-WS-INTEGRITY.
131600
131700* Here we verify in part working-storage integrity. See maintennance
131800* notes at the beginning of this program.
131900
132000* LENGTH OF ISPF-LENGTH-LIST.
132100     COMPUTE AACLOILL
132200           = ISPF-NAME-CNT
132300           * 4.
132400
132500* LENGTH OF ISPF-NAME-VDEFINE.
132600     COMPUTE AACLOINV
132700           = ISPF-NAME-CNT
132800           * 8
132900           + 8.
133000
133100* LENGTH OF ISPF-FORMAT-LIST.
133200     COMPUTE AACLOIFL
133300           = ISPF-NAME-CNT
133400           * 8.
133500
133600     MOVE ISPF-LENGTH-LIST TO ISPF-LENGTH-TABLE.
133700     MOVE 0 TO AACLOIVL.
133800
133900     PERFORM 0005D-ADD-LENGTHS            THRU 0005D-EXIT
134000             VARYING LENGTH-SUB FROM 1 BY 1
134100             UNTIL   LENGTH-SUB > ISPF-NAME-CNT.
134200
134300     IF (LENGTH OF ISPF-LENGTH-LIST   NOT = AACLOILL) OR
134400        (LENGTH OF ISPF-NAME-VDEFINE  NOT = AACLOINV) OR
134500        (LENGTH OF ISPF-FORMAT-LIST   NOT = AACLOIFL) OR
134600        (LENGTH OF ISPF-VARIABLE-LIST NOT = AACLOIVL)
134700            MOVE LENGTH OF ISPF-LENGTH-LIST   TO AALOILL
134800            MOVE LENGTH OF ISPF-NAME-VDEFINE  TO AALOINV
134900            MOVE LENGTH OF ISPF-FORMAT-LIST   TO AALOIFL
135000            MOVE LENGTH OF ISPF-VARIABLE-LIST TO AALOIVL
135100            IF RUNNING-IN-FOREGROUND
135200               MOVE 'DISPLAY PANEL(RSISPFWS)'    TO ISPF-BUFFER
135300               CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER
135400            ELSE
135500               DISPLAY 'WORKING STORAGE INTEGRITY CHECK FAILED.'
135600               MOVE 107 TO WS-ABEND-CODE
135700               CALL 'ILBOABN0' USING WS-ABEND-CODE
135800            END-IF
135900            PERFORM 0017-VDELETE          THRU 0017-EXIT
136000            STOP RUN.
136100
136200 0005C-EXIT.
136300     EXIT.
136400
136500 0005D-ADD-LENGTHS.
136600
136700* LENGTH OF ISPF-VARIABLE-LIST.
136800     COMPUTE AACLOIVL
136900           = AACLOIVL
137000           + ISPF-LENGTH-ENTRY (LENGTH-SUB).
137100
137200 0005D-EXIT.
137300     EXIT.
137400     EJECT
137500 0017-VDELETE.
137600
137700     MOVE  1         TO ISPF-NAME-COUNT.
137800     MOVE '*       ' TO ISPF-NAME(1).
137900     CALL 'ISPLINK' USING  VDELETE       ISPF-NAME-LIST.
138000*    IF RETURN-CODE NOT = 0
138100*           8 - AT LEAST ONE VARIABLE NOT FOUND
138200*          20 - SEVERE ERROR
138300*        NEXT SENTENCE.
138400
138500 0017-EXIT.
138600     EXIT.
138700     EJECT
138800 0050-PROCESS-DSN-LIST.
138900
139000     MOVE 'N'    TO WS-ALTERNATE-INDEX-SW
139100                    WS-IMBEDDED-FILE-SW
139200                    WS-RECOVERY-SW
139300                    WS-WRITECHK-SW
139400                    WS-REPLICAT-SW
139500                    WS-ERASE-SW.
139600     MOVE SPACES TO COLFLG1
139700                    COLFLG2
139800                    COLFLG3
139900                    COLFLG4
140000                    COLFLG5
140100                    SPANNED.
140200
140300     IF RUNNING-IN-FOREGROUND
140400        GO TO 0050-SKIP-BACKGROUND-STUFF.
140500
140600     PERFORM 9010-READ-DSNLIST              THRU 9010-EXIT.
140700     IF END-OF-DSN-FILE
140800        GO TO 0050-EXIT.
140900
141000     OPEN OUTPUT SYSIN.
141100
141200     MOVE SPACES TO SYSIN-RECORD.
141300     STRING ' LISTC ENTRY('''          DELIMITED BY SIZE
141400            VSAM-DATASET-NAME          DELIMITED BY SPACE
141500            ''') ALL OUTFILE(LISTCAT)' DELIMITED BY SIZE
141600       INTO SYSIN-RECORD.
141700
141800     WRITE SYSIN-RECORD.
141900
142000     CLOSE SYSIN.
142100
142200     CALL 'IDCAMS'.
142300     IF RETURN-CODE > 0
142400        DISPLAY 'IDCAMS LISTCAT FAILED ON DSN='
142500                VSAM-DATASET-NAME
142600        GO TO 0050-EXIT.
142700
142800     OPEN INPUT LISTCAT.
142900
143000 0050-SKIP-BACKGROUND-STUFF.
143100     MOVE 0             TO WS-TOTAL-TRACKS-IN-FILE.
143200     MOVE 'N'           TO END-OF-FILE-SW.
143300     MOVE SPACES        TO VOLSER
143400                           EXCPRPT-RECORD.
143500     PERFORM 0100-GATHER-LISTCAT-INFO       THRU 0100-EXIT
143600             UNTIL END-OF-FILE.
143700
143800     IF ALTERNATE-INDEX
143900        MOVE SPACES TO EXCPRPT-RECORD
144000        MOVE 'File is or has an AIX'  TO ER-EXCEPTION
144100                                  ZEDSMSG
144200        MOVE 'No action taken' TO ER-ACTION
144300                                  ZEDLMSG
144400        IF RUNNING-IN-BACKGROUND
144500           MOVE VSAM-DATASET-NAME TO ER-DATASET-NAME
144600           PERFORM 8000-WRITE-EXCPRPT-RECORD THRU 8000-EXIT
144700           CLOSE LISTCAT
144800        ELSE
144900           MOVE 'SETMSG MSG(ISRZ001)' TO ISPF-BUFFER
145000           CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER
145100        END-IF
145200        GO TO 0050-EXIT.
145300
145400     IF VOLSER = 'MIGRAT'
145500        MOVE SPACES TO EXCPRPT-RECORD
145600        MOVE 'File migrated'   TO ER-EXCEPTION
145700                                  ZEDSMSG
145800        MOVE 'No action taken' TO ER-ACTION
145900                                  ZEDLMSG
146000        IF RUNNING-IN-BACKGROUND
146100           MOVE VSAM-DATASET-NAME TO ER-DATASET-NAME
146200           PERFORM 8000-WRITE-EXCPRPT-RECORD THRU 8000-EXIT
146300           CLOSE LISTCAT
146400        ELSE
146500           MOVE 'SETMSG MSG(ISRZ001)' TO ISPF-BUFFER
146600           CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER
146700        END-IF
146800        GO TO 0050-EXIT.
146900
147000     IF WS-KEY-LENGTH = 0
147100        MOVE SPACES TO EXCPRPT-RECORD
147200        MOVE 'File not KSDS'   TO ER-EXCEPTION
147300                                  ZEDSMSG
147400        MOVE 'No action taken' TO ER-ACTION
147500                                  ZEDLMSG
147600        IF RUNNING-IN-BACKGROUND
147700           MOVE VSAM-DATASET-NAME TO ER-DATASET-NAME
147800           PERFORM 8000-WRITE-EXCPRPT-RECORD THRU 8000-EXIT
147900           CLOSE LISTCAT
148000        ELSE
148100           MOVE 'SETMSG MSG(ISRZ001)' TO ISPF-BUFFER
148200           CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER
148300        END-IF
148400        GO TO 0050-EXIT.
148500
148600     PERFORM 0200-CALCULATE-STATS           THRU 0200-EXIT.
148700     IF WS-ALLOCATED-CYLINDERS < 10 AND
148800        RUNNING-IN-BACKGROUND
148900           CLOSE LISTCAT
149000           GO TO 0050-EXIT.
149100     IF WS-RECORDS-PER-CYLINDER = 0
149200        IF RUNNING-IN-BACKGROUND
149300           CLOSE LISTCAT
149400        END-IF
149500           GO TO 0050-EXIT
149600     END-IF.
149700
149800     MOVE 0 TO OFFSET.
149900     INSPECT WS-LISTCAT-RECORD TALLYING OFFSET
150000                FOR ALL 'INDEX ---'.
150100     IF OFFSET > 0
150200        MOVE 'N' TO END-OF-FILE-SW
150300        PERFORM 0300-GET-INDEX-CISIZE       THRU 0300-EXIT
150400                UNTIL END-OF-FILE.
150500
150600     IF RUNNING-IN-BACKGROUND
150700        CLOSE LISTCAT.
150800
150900     PERFORM 0400-SET-SCREEN-COLORS         THRU 0400-EXIT.
151000
151100     PERFORM 0500-TREAT-EXCEPTION           THRU 0500-EXIT.
151200
151300     IF RUNNING-IN-FOREGROUND
151400        PERFORM 0055-DISPLAY-INFO           THRU 0055-EXIT.
151500
151600 0050-EXIT.
151700     EXIT.
151800     EJECT
151900 0055-DISPLAY-INFO.
152000
152100     MOVE 'DISPLAY PANEL(AP1PVSAM)' TO ISPF-BUFFER.
152200     CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER.
152300
152400     IF RETURN-CODE > 8
152500*           4 - COMMAND NOT FOUND
152600*           8 - END OR RETURN COMMAND ENTERED
152700*          12 - PANEL, MESSAGE, OR CURSOR FIELD COULD NOT BE FOUND
152800*          16 - DATA TRUNCATION OR TRANSLATION ERROR
152900*          20 - SEVERE ERROR
153000        MOVE RETURN-CODE TO ABCODE
153100        MOVE '0055-DISPLAY-INFO'
153200                          TO ABPARA
153300        MOVE 'UNABLE TO DISPLAY AP1PVSAM PANEL'
153400                          TO ABMSG
153500        MOVE 'IF CODE = 12: PANEL NOT FOUND'
153600                          TO ABMISC
153700        MOVE VSAM-STATUS  TO ABVSAM
153800        PERFORM 9999-ISPF-ABEND             THRU 9999-EXIT.
153900
154000 0055-EXIT.
154100     EXIT.
154200     EJECT
154300
154400 0100-GATHER-LISTCAT-INFO.
154500
154600     PERFORM 9000-READ-LISTCAT              THRU 9000-EXIT.
154700     IF END-OF-FILE
154800        GO TO 0100-EXIT.
154900
155000     IF WS-LISTCAT-RECORD (96:5) = 'IMBED'
155100        MOVE 'Y' TO WS-IMBEDDED-FILE-SW.
155200
155300     IF WS-LISTCAT-RECORD (24:10) = ' RECOVERY '
155400        MOVE 'Y' TO WS-RECOVERY-SW.
155500
155600     IF WS-LISTCAT-RECORD (37:9) = ' SPANNED '
155700        MOVE 'Y' TO SPANNED.
155800
155900     IF WS-LISTCAT-RECORD (80:11) = ' WRITECHECK'
156000        MOVE 'Y' TO WS-WRITECHK-SW.
156100
156200     IF WS-LISTCAT-RECORD (109:9) = ' REPLICAT'
156300        MOVE 'Y' TO WS-REPLICAT-SW.
156400
156500     IF WS-LISTCAT-RECORD (56:6) = ' ERASE'
156600        MOVE 'Y' TO WS-ERASE-SW.
156700
156800     IF WS-LISTCAT-RECORD (8:10) = ' SHROPTNS('
156900        MOVE WS-LISTCAT-RECORD (18:3) TO SHROPTNS
157000        IF WS-LISTCAT-RECORD (66:8) NOT = ' INDEXED'
157100* An RRDS dataset will have a key length of 4. Here we detect
157200* an RRDS or ESDS dataset and fake out the key length, which is
157300* used to detect non-KSDS datasets.
157400           MOVE 0 TO WS-KEY-LENGTH
157500           MOVE 'Y' TO END-OF-FILE-SW
157600           GO TO 0100-EXIT.
157700
157800* Detect alternate exit.
157900     MOVE 0 TO OFFSET.
158000     INSPECT WS-LISTCAT-RECORD TALLYING OFFSET
158100             FOR ALL 'AIX------'.
158200     IF OFFSET > 0
158300        MOVE 'Y' TO END-OF-FILE-SW
158400        MOVE 'Y' TO WS-ALTERNATE-INDEX-SW
158500        GO TO 0100-EXIT
158600     END-IF.
158700
158800* Get data set name
158900     MOVE 0 TO OFFSET.
159000     INSPECT WS-LISTCAT-RECORD TALLYING OFFSET
159100             FOR ALL 'CLUSTER--'.
159200     IF OFFSET > 0
159300        MOVE WS-LISTCAT-RECORD (18:44) TO DSNAME
159400     END-IF.
159500
159600* Get key length, avg lrecl, and data cisize
159700     MOVE 0 TO OFFSET.
159800     INSPECT WS-LISTCAT-RECORD TALLYING OFFSET
159900                FOR ALL 'KEYLEN'.
160000     IF OFFSET > 0
160100        MOVE WS-LISTCAT-RECORD (22:11) TO WS-ALPHA
160200        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'
160300        MOVE WS-ALPHA-ZD TO WS-KEY-LENGTH
160400        IF WS-KEY-LENGTH = 0
160500           MOVE 'Y' TO END-OF-FILE-SW
160600           GO TO 0100-EXIT
160700        END-IF
160800
160900        MOVE WS-LISTCAT-RECORD (51:11) TO WS-ALPHA
161000        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'
161100        MOVE WS-ALPHA-ZD TO WS-LISTCAT-AVERAGE-LRECL
161200
161300        MOVE WS-LISTCAT-RECORD (109:11) TO WS-ALPHA
161400        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'
161500        MOVE WS-ALPHA-ZD TO WS-DATA-CISIZE
161600
161700        GO TO 0100-EXIT
161800     END-IF.
161900
162000* Get key offset, max lrecl and CIs per CA
162100     MOVE 0 TO OFFSET.
162200     INSPECT WS-LISTCAT-RECORD TALLYING OFFSET
162300                FOR ALL 'RKP-'.
162400     IF OFFSET > 0
162500        MOVE WS-LISTCAT-RECORD (22:11) TO WS-ALPHA
162600        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'
162700        MOVE WS-ALPHA-ZD TO KEYOFF
162800
162900        MOVE WS-LISTCAT-RECORD (51:11) TO WS-ALPHA
163000        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'
163100        MOVE WS-ALPHA-ZD TO WS-LISTCAT-MAXIMUM-LRECL
163200
163300        MOVE WS-LISTCAT-RECORD (109:11) TO WS-ALPHA
163400        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'
163500        MOVE WS-ALPHA-ZD TO WS-CI-PER-CA
163600
163700        GO TO 0100-EXIT
163800     END-IF.
163900
164000* Get statistics
164100     MOVE 0 TO OFFSET.
164200     INSPECT WS-LISTCAT-RECORD TALLYING OFFSET
164300                FOR ALL 'REC-TOTAL-'.
164400     IF OFFSET > 0
164500        MOVE WS-LISTCAT-RECORD (22:11) TO WS-ALPHA
164600        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'
164700        MOVE WS-ALPHA-ZD TO WS-RECORDS-IN-FILE
164800
164900        MOVE WS-LISTCAT-RECORD (51:11) TO WS-ALPHA
165000        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'
165100        MOVE WS-ALPHA-ZD TO WS-CI-SPLITS
165200
165300        GO TO 0100-EXIT
165400     END-IF.
165500
165600     MOVE 0 TO OFFSET.
165700     INSPECT WS-LISTCAT-RECORD TALLYING OFFSET
165800                FOR ALL 'REC-DELETED-'.
165900     IF OFFSET > 0
166000        MOVE WS-LISTCAT-RECORD (22:11) TO WS-ALPHA
166100        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'
166200        MOVE WS-ALPHA-ZD TO RECDEL
166300
166400        MOVE WS-LISTCAT-RECORD (51:11) TO WS-ALPHA
166500        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'
166600        MOVE WS-ALPHA-ZD TO WS-CA-SPLITS
166700
166800        MOVE WS-LISTCAT-RECORD (86:5) TO WS-ALPHA
166900        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'
167000        MOVE WS-ALPHA-ZD TO WS-EXTENTS
167100
167200        GO TO 0100-EXIT
167300     END-IF.
167400
167500     MOVE 0 TO OFFSET.
167600     INSPECT WS-LISTCAT-RECORD TALLYING OFFSET
167700                FOR ALL 'REC-INSERTED-'.
167800     IF OFFSET > 0
167900        MOVE WS-LISTCAT-RECORD (22:11) TO WS-ALPHA
168000        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'
168100        MOVE WS-ALPHA-ZD TO RECINS
168200
168300        MOVE WS-LISTCAT-RECORD (51:11) TO WS-ALPHA
168400        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'
168500        MOVE WS-ALPHA-ZD TO WS-FREESPACE-PERCENT-CI
168600
168700        GO TO 0100-EXIT
168800     END-IF.
168900
169000     MOVE 0 TO OFFSET.
169100     INSPECT WS-LISTCAT-RECORD TALLYING OFFSET
169200                FOR ALL 'REC-UPDATED-'.
169300     IF OFFSET > 0
169400        MOVE WS-LISTCAT-RECORD (22:11) TO WS-ALPHA
169500        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'
169600        MOVE WS-ALPHA-ZD TO RECUPD
169700
169800        MOVE WS-LISTCAT-RECORD (51:11) TO WS-ALPHA
169900        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'
170000        MOVE WS-ALPHA-ZD TO WS-FREESPACE-PERCENT-CA
170100
170200        GO TO 0100-EXIT
170300     END-IF.
170400
170500     MOVE 0 TO OFFSET.
170600     INSPECT WS-LISTCAT-RECORD TALLYING OFFSET
170700                FOR ALL 'REC-RETRIEVED'.
170800     IF OFFSET > 0
170900        MOVE WS-LISTCAT-RECORD (22:11) TO WS-ALPHA
171000        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'
171100        MOVE WS-ALPHA-ZD TO RECREAD
171200
171300        GO TO 0100-EXIT
171400     END-IF.
171500
171600* Get allocation stats
171700     MOVE 0 TO OFFSET.
171800     INSPECT WS-LISTCAT-RECORD TALLYING OFFSET
171900                FOR ALL 'SPACE-TYPE-'.
172000     IF OFFSET > 0
172100        IF WS-LISTCAT-RECORD (25:8) = 'CYLINDER'
172200           MOVE 'CYLS' TO SPACTYPE
172300        ELSE
172400           MOVE 'TRKS' TO SPACTYPE
172500        END-IF
172600
172700        MOVE WS-LISTCAT-RECORD (51:11) TO WS-ALPHA
172800        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'
172900        MOVE WS-ALPHA-ZD TO WS-HIGH-ALLOCATED-RBA
173000
173100        PERFORM 9000-READ-LISTCAT           THRU 9000-EXIT
173200        MOVE WS-LISTCAT-RECORD (22:11) TO WS-ALPHA
173300        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'
173400        MOVE WS-ALPHA-ZD TO PRIMARY
173500
173600        MOVE WS-LISTCAT-RECORD (51:11) TO WS-ALPHA
173700        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'
173800        MOVE WS-ALPHA-ZD TO WS-HIGH-USED-RBA
173900
174000        PERFORM 9000-READ-LISTCAT           THRU 9000-EXIT
174100        MOVE WS-LISTCAT-RECORD (22:11) TO WS-ALPHA
174200        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'
174300        MOVE WS-ALPHA-ZD TO SECNDARY
174400     END-IF.
174500
174600* Get volume stats (how many tracks are allocated)
174700     MOVE 0 TO OFFSET.
174800     INSPECT WS-LISTCAT-RECORD TALLYING OFFSET
174900                FOR ALL 'LOW-CCHH-'.
175000     IF OFFSET > 0
175100        MOVE WS-LISTCAT-RECORD (81:10) TO WS-ALPHA
175200        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'
175300        ADD  WS-ALPHA-ZD TO WS-TOTAL-TRACKS-IN-FILE
175400     END-IF.
175500
175600* Get volser (for production redefines)
175700* Occasionally, the VOLSER field in the LISTCAT is corrupted.
175800* Checking for spaces can correct it.
175900     MOVE 0 TO OFFSET.
176000     IF VOLSER = SPACES
176100        INSPECT WS-LISTCAT-RECORD TALLYING OFFSET
176200                FOR ALL 'VOLSER---'
176300        IF OFFSET > 0
176400           MOVE WS-LISTCAT-RECORD (27:6) TO VOLSER
176500           IF VOLSER = 'MIGRAT'
176600              MOVE 'Y' TO END-OF-FILE-SW
176700              GO TO 0100-EXIT
176800        END-IF
176900     END-IF.
177000
177100 0100-EXIT.
177200     EXIT.
177300     EJECT
177400 0200-CALCULATE-STATS.
177500
177600* Control interval overhead is 10 bytes for fixed records.
177700* Variable records have more overhead. Hopefully 16 is a good average.
177800     IF WS-LISTCAT-AVERAGE-LRECL = WS-LISTCAT-MAXIMUM-LRECL
177900        COMPUTE WS-CI-OVERHEAD = 10
178000     ELSE
178100        COMPUTE WS-CI-OVERHEAD = 16.
178200
178300* how many bytes are in the free area of each CI
178400     COMPUTE WS-CI-FREE-BYTES
178500           = WS-FREESPACE-PERCENT-CI
178600           * WS-DATA-CISIZE
178700           / 100.
178800
178900     COMPUTE WS-LOADED-CIS-PER-CA
179000           = WS-CI-PER-CA
179100           * (100 - WS-FREESPACE-PERCENT-CA)
179200           / 100.
179300
179400* Find out if the file is compressed.
179500     MOVE SPACE             TO BMC-COMPRESSION-FLAG.
179600     IF RUNNING-IN-BACKGROUND
179700        MOVE VSAM-DATASET-NAME TO BMC-VSAM-DATASET-NAME
179800     ELSE
179900        MOVE DSNAME            TO BMC-VSAM-DATASET-NAME
180000     END-IF.
180100     MOVE WS-REG-KEY        TO REG-KEY.
180200     READ REGISET  KEY      IS REG-KEY.
180300     IF VSAM-NOT-FOUND      OR
180400        VSAM-SUCCESSFUL
180500           NEXT SENTENCE
180600     ELSE
180700        DISPLAY 'UNSUCCESSFUL READ ON REGISET FILE'
180800        DISPLAY 'PARAGRAF: 0518-CALCULATE-SPACE'
180900        DISPLAY 'KEY IS: ' REG-KEY
181000        DISPLAY 'VSAM STATUS CODE: ' VSAM-STATUS
181100        MOVE 100 TO WS-ABEND-CODE
181200        CALL 'ILBOABN0' USING WS-ABEND-CODE.
181300
181400     IF BMC-COMPRESSED-FILE
181500        MOVE 'Y' TO BMCFLAG
181600     ELSE
181700        MOVE 'N' TO BMCFLAG.
181800
181900* Total allocated cylinders.
182000     COMPUTE WS-ALLOCATED-CYLINDERS
182100           = WS-TOTAL-TRACKS-IN-FILE
182200           / WS-TRACKS-PER-CYL.
182300* Failsafe ....
182400     IF WS-ALLOCATED-CYLINDERS = 0
182500        COMPUTE WS-ALLOCATED-CYLINDERS = 1.
182600
182700* Space wasted due to CA and CI splits is calculated here as a
182800* percentage
182900     IF WS-CA-SPLITS > 0
183000        COMPUTE WS-CA-SPLITS-DISTORTION
183100              = (WS-CA-SPLITS
183200              /  2)
183300              /  WS-ALLOCATED-CYLINDERS
183400     ELSE
183500        MOVE 0 TO WS-CA-SPLITS-DISTORTION.
183600
183700     IF WS-CI-SPLITS > 0
183800        COMPUTE WS-CI-SPLITS-DISTORTION
183900              = (WS-CI-SPLITS
184000              /  2)
184100              / (WS-ALLOCATED-CYLINDERS
184200              *  WS-CI-PER-CA)
184300     ELSE
184400        MOVE 0 TO WS-CI-SPLITS-DISTORTION.
184500
184600*  percent used    (in 0.99% format)
184700     COMPUTE WS-PERCENT-FILE-USED ROUNDED
184800           = WS-HIGH-USED-RBA
184900           / WS-HIGH-ALLOCATED-RBA.
185000
185100*  true percent used (without space wasted due to splits)
185200     COMPUTE WS-TRUE-PERCENT-FILE-USED ROUNDED
185300           = WS-PERCENT-FILE-USED
185400           - WS-CI-SPLITS-DISTORTION
185500           - WS-CA-SPLITS-DISTORTION.
185600
185700* Too small to worry about
185800     IF WS-ALLOCATED-CYLINDERS < 10
185900        MOVE SPACES TO EXCPRPT-RECORD
186000        MOVE 'File too small to worry about' TO ER-EXCEPTION
186100        MOVE 'No action taken'               TO ER-ACTION
186200        MOVE VSAM-DATASET-NAME               TO ER-DATASET-NAME
186300        PERFORM 8000-WRITE-EXCPRPT-RECORD   THRU 8000-EXIT
186400        IF RUNNING-IN-BACKGROUND
186500           GO TO 0200-EXIT.
186600
186700*            annual cost for the used portion of the file
186800     COMPUTE WS-FREE-AND-USED-COST ROUNDED
186900           =  WS-ALLOCATED-CYLINDERS
187000           *  WS-PERCENT-FILE-USED
187100           *  WS-DAILY-GB-COST
187200           *  365
187300           *  WS-GIGABYTE-PER-CYL.
187400
187500*            annual cost for the unused portion of the file
187600     COMPUTE WS-UNUSED-SPACE-COST ROUNDED
187700           =  WS-ALLOCATED-CYLINDERS
187800           * (1 - WS-PERCENT-FILE-USED)
187900           *  WS-DAILY-GB-COST
188000           *  365
188100           *  WS-GIGABYTE-PER-CYL.
188200
188300*            annual cost for the whole bloody file ...
188400     COMPUTE WS-ANNUAL-COST-OF-FILE ROUNDED
188500           = WS-FREE-AND-USED-COST
188600           + WS-UNUSED-SPACE-COST.
188700
188800* percent used in 99.99% format...
188900     COMPUTE PCTUSED ROUNDED
189000           = WS-PERCENT-FILE-USED
189100           * 100.
189200
189300* percent of total cost represented by unused space
189400     COMPUTE WS-UNUSED-SPACE-PCT-OF-COST ROUNDED
189500           = WS-UNUSED-SPACE-COST
189600           / WS-ANNUAL-COST-OF-FILE
189700           * 100.
189800
189900* percent of total cost represented by used (incl free) space
190000     COMPUTE WS-FREE-AND-USED-PCT-OF-COST ROUNDED
190100           = WS-FREE-AND-USED-COST
190200           / WS-ANNUAL-COST-OF-FILE
190300           * 100.
190400
190500* Cost of CI free space
190600     COMPUTE WS-CI-FREESPACE-COST ROUNDED
190700           = WS-FREE-AND-USED-COST
190800           * (WS-FREESPACE-PERCENT-CI / 100).
190900
191000* Cost of CA free space
191100     COMPUTE WS-CA-FREESPACE-COST ROUNDED
191200           = WS-FREE-AND-USED-COST
191300           * (WS-FREESPACE-PERCENT-CA / 100).
191400
191500* Cost of CI and CA free space
191600     COMPUTE WS-FREESPACE-COST ROUNDED
191700           = WS-CI-FREESPACE-COST
191800           + WS-CA-FREESPACE-COST.
191900
192000* percent of total cost as represented by CI free space
192100     COMPUTE WS-CI-FREESPACE-PCT-OF-COST ROUNDED
192200           = WS-CI-FREESPACE-COST
192300           / WS-ANNUAL-COST-OF-FILE
192400           * 100.
192500
192600* percent of total cost as represented by CA free space
192700     COMPUTE WS-CA-FREESPACE-PCT-OF-COST ROUNDED
192800           = WS-CA-FREESPACE-COST
192900           / WS-ANNUAL-COST-OF-FILE
193000           * 100.
193100
193200* percent of total cost as represented by CI and CA free space
193300     COMPUTE WS-FREESPACE-PCT-OF-COST ROUNDED
193400           = WS-CI-FREESPACE-PCT-OF-COST
193500           + WS-CA-FREESPACE-PCT-OF-COST.
193600
193700* cost of unused and free space
193800     COMPUTE WS-FREE-AND-UNUSED-COST ROUNDED
193900           = WS-FREESPACE-COST
194000           + WS-UNUSED-SPACE-COST.
194100
194200* percent of total cost as represented by free space and unused space
194300     COMPUTE WS-FREE-AND-UNUSED-PCT-OF-COST ROUNDED
194400           = WS-FREESPACE-PCT-OF-COST
194500           + WS-UNUSED-SPACE-PCT-OF-COST.
194600
194700* Records per cylinder.
194800* If the file is not compressed and consists of fixed records,
194900* we use the sure-fire method. Even the "sure-fire" method doesn't
195000* work if a VSAM file has the following attributes: CISIZE=4K,
195100* LRECL=4089, CIFREE % = n. That's why an additional fail-safe
195200* is installed.
195300
195400     IF ((NOT BMC-COMPRESSED-FILE)  AND
195500          WS-LISTCAT-MAXIMUM-LRECL = WS-LISTCAT-AVERAGE-LRECL) OR
195600          (WS-PERCENT-FILE-USED = 0)
195700        COMPUTE WS-ALPHA-ZD
195800           = (WS-DATA-CISIZE
195900           -  WS-CI-OVERHEAD
196000           -  WS-CI-FREE-BYTES)
196100           /  WS-LISTCAT-AVERAGE-LRECL
196200           *  WS-LOADED-CIS-PER-CA
196300        MOVE WS-ALPHA-ZD TO WS-RECORDS-PER-CYLINDER
196400        IF WS-RECORDS-PER-CYLINDER = 0
196500           MOVE SPACES TO EXCPRPT-RECORD
196600           MOVE 'Cannot process file. Bad news.' TO ER-EXCEPTION
196700                                                    ZEDSMSG
196800           MOVE 'No action taken'               TO ER-ACTION
196900                                                    ZEDLMSG
197000           IF RUNNING-IN-BACKGROUND
197100              MOVE VSAM-DATASET-NAME TO ER-DATASET-NAME
197200              PERFORM 8000-WRITE-EXCPRPT-RECORD THRU 8000-EXIT
197300           ELSE
197400              MOVE 'SETMSG MSG(ISRZ001)' TO ISPF-BUFFER
197500              CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER
197600           END-IF
197700           GO TO 0200-EXIT
197800        END-IF
197900     ELSE
198000        COMPUTE WS-RECORDS-PER-CYLINDER
198100              =  WS-RECORDS-IN-FILE
198200              / (WS-ALLOCATED-CYLINDERS * WS-PERCENT-FILE-USED)
198300     END-IF.
198400
198500* additional records file can accommodate w/o going into extents.
198600     COMPUTE ADDRECS
198700           = WS-RECORDS-PER-CYLINDER
198800           * (1 - WS-PERCENT-FILE-USED)
198900           * WS-ALLOCATED-CYLINDERS.
199000
199100* Here the true average LRECL is calculated in case the LISTCAT
199200* version is wrong (which it certainly is if compression is on).
199300* In addition, variable length files with splits need adjusting.
199400
199500     IF ((NOT BMC-COMPRESSED-FILE)  AND
199600          WS-LISTCAT-MAXIMUM-LRECL = WS-LISTCAT-AVERAGE-LRECL) OR
199700          (WS-PERCENT-FILE-USED = 0)                           OR
199800          (WS-RECORDS-IN-FILE   < 500)
199900           MOVE WS-LISTCAT-AVERAGE-LRECL TO WS-TRUE-AVERAGE-LRECL
200000     ELSE
200100           COMPUTE WS-TRUE-AVERAGE-LRECL
200200                 =  (WS-DATA-CISIZE
200300                 -   WS-CI-OVERHEAD
200400                 -   WS-CI-FREE-BYTES)
200500                 *   WS-LOADED-CIS-PER-CA
200600                 / ((WS-RECORDS-IN-FILE
200700                 /  (WS-ALLOCATED-CYLINDERS
200800                 *   WS-TRUE-PERCENT-FILE-USED))).
200900
201000* If the catalog is wrong with the record count (like way wrong), the
201100* true avglrecl will be wrong too. Here's one correction:
201200     IF WS-TRUE-AVERAGE-LRECL < 8
201300        COMPUTE WS-TRUE-AVERAGE-LRECL = WS-LISTCAT-AVERAGE-LRECL.
201400
201500* The safety is on ...
201600     IF WS-TRUE-AVERAGE-LRECL > WS-LISTCAT-MAXIMUM-LRECL
201700        COMPUTE WS-TRUE-AVERAGE-LRECL = WS-LISTCAT-AVERAGE-LRECL.
201800
201900     PERFORM 0210-CALC-FREE-STUFF           THRU 0210-EXIT.
202000
202100 0200-EXIT.
202200     EXIT.
202300     EJECT
202400 0210-CALC-FREE-STUFF.
202500
202600* what CI freespace percentage is required to store 1 record
202700     COMPUTE WS-FREE-CI-PERCENTAGE-1
202800           = WS-TRUE-AVERAGE-LRECL
202900           / WS-DATA-CISIZE
203000           * 100
203100           + 1.
203200
203300* what CI freespace percentage is required to store 2 records
203400     COMPUTE WS-FREE-CI-PERCENTAGE-2
203500           = (WS-TRUE-AVERAGE-LRECL
203600           / WS-DATA-CISIZE
203700           *  100)
203800           *  2
203900           +  1.
204000
204100* what CI freespace percentage is required to store 3 records
204200     COMPUTE WS-FREE-CI-PERCENTAGE-3
204300           = (WS-TRUE-AVERAGE-LRECL
204400           / WS-DATA-CISIZE
204500           *  100)
204600           *  3
204700           +  1.
204800
204900* what CI freespace percentage is required to store 4 records
205000     COMPUTE WS-FREE-CI-PERCENTAGE-4
205100           = (WS-TRUE-AVERAGE-LRECL
205200           / WS-DATA-CISIZE
205300           *  100)
205400           *  4
205500           +  1.
205600
205700* what CI freespace percentage is required to store 5 records
205800     COMPUTE WS-FREE-CI-PERCENTAGE-5
205900           = (WS-TRUE-AVERAGE-LRECL
206000           / WS-DATA-CISIZE
206100           *  100)
206200           *  5
206300           +  1.
206400
206500* what CI freespace percentage is required to store 6 records
206600     COMPUTE WS-FREE-CI-PERCENTAGE-6
206700           = (WS-TRUE-AVERAGE-LRECL
206800           / WS-DATA-CISIZE
206900           *  100)
207000           *  6
207100           +  1.
207200
207300* what CI freespace percentage is required to store 7 records
207400     COMPUTE WS-FREE-CI-PERCENTAGE-7
207500           = (WS-TRUE-AVERAGE-LRECL
207600           / WS-DATA-CISIZE
207700           *  100)
207800           *  7
207900           +  1.
208000
208100* what CI freespace percentage is required to store 8 records
208200     COMPUTE WS-FREE-CI-PERCENTAGE-8
208300           = (WS-TRUE-AVERAGE-LRECL
208400           / WS-DATA-CISIZE
208500           *  100)
208600           *  8
208700           +  1.
208800
208900* what CI freespace percentage is required to store 9 records
209000     COMPUTE WS-FREE-CI-PERCENTAGE-9
209100           = (WS-TRUE-AVERAGE-LRECL
209200           / WS-DATA-CISIZE
209300           *  100)
209400           *  9
209500           +  1.
209600
209700 0210-EXIT.
209800     EXIT.
209900     EJECT
210000 0300-GET-INDEX-CISIZE.
210100
210200     PERFORM 9000-READ-LISTCAT              THRU 9000-EXIT.
210300     IF END-OF-FILE
210400        GO TO 0300-EXIT.
210500
210600     MOVE 0 TO OFFSET.
210700     INSPECT WS-LISTCAT-RECORD TALLYING OFFSET
210800                FOR ALL ' ATTRIBUTES'.
210900     IF OFFSET > 0
211000        PERFORM 9000-READ-LISTCAT           THRU 9000-EXIT
211100        MOVE WS-LISTCAT-RECORD (109:11) TO WS-ALPHA
211200        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'
211300        MOVE WS-ALPHA-ZD TO WS-INDEX-CISIZE
211400        MOVE 'Y' TO END-OF-FILE-SW.
211500
211600 0300-EXIT.
211700     EXIT.
211800     EJECT
211900 0400-SET-SCREEN-COLORS.
212000
212100* copy stat fields to the ISPF fields and report fields
212200     MOVE WS-TRUE-AVERAGE-LRECL            TO TAVGLREC.
212300     MOVE SECNDARY                         TO CR-OLD-SECONDARY
212400                                              OLDSEC.
212500     MOVE WS-RECORDS-PER-CYLINDER          TO RECPCYL.
212600     MOVE WS-ALLOCATED-CYLINDERS           TO ALLOCCYL
212700                                              CR-OLD-PRIMARY
212800                                              OLDPRIM.
212900     MOVE WS-RECORDS-IN-FILE               TO RECTOTAL.
213000     MOVE WS-FREESPACE-PERCENT-CI          TO FREECI
213100                                              CR-OLD-CI-FREE
213200                                              OLDCIFP.
213300     MOVE WS-FREESPACE-PERCENT-CA          TO FREECA
213400                                              CR-OLD-CA-FREE
213500                                              OLDCAFP.
213600     MOVE WS-CI-FREESPACE-COST             TO CSTCIFS.
213700     MOVE WS-CA-FREESPACE-COST             TO CSTCAFS.
213800     MOVE WS-FREESPACE-COST                TO CSTALLFS.
213900     MOVE WS-FREE-AND-UNUSED-COST          TO CSTUFS.
214000     MOVE WS-FREE-AND-USED-COST            TO CSTUSDFS.
214100     MOVE WS-UNUSED-SPACE-COST             TO CSTUNUSD.
214200     MOVE WS-ANNUAL-COST-OF-FILE           TO CSTTOTAL
214300                                              CR-OLD-COST.
214400     MOVE WS-CI-FREESPACE-PCT-OF-COST      TO PCTCIFS.
214500     MOVE WS-CA-FREESPACE-PCT-OF-COST      TO PCTCAFS.
214600     MOVE WS-FREESPACE-PCT-OF-COST         TO PCTALLFS.
214700     MOVE WS-FREE-AND-UNUSED-PCT-OF-COST   TO PCTUFS.
214800     MOVE WS-FREE-AND-USED-PCT-OF-COST     TO PCTUSDFS.
214900     MOVE WS-UNUSED-SPACE-PCT-OF-COST      TO PCTUNUSD.
215000     MOVE WS-INDEX-CISIZE                  TO CISIZEI
215100                                              OLDICIS
215200                                           CR-OLD-INDEX-CISIZE.
215300
215400* We have two data cisizes, because the ISPF skeleton can't handle
215500* the leading blanks ...
215600     MOVE WS-DATA-CISIZE                   TO   CISIZED
215700                                                OLDDCIS
215800                                                CISIZED2
215900                                           CR-OLD-DATA-CISIZE.
216000     MOVE WS-KEY-LENGTH                    TO   KEYLEN.
216100     MOVE WS-EXTENTS                       TO   EXTENTS.
216200     MOVE WS-CI-SPLITS                     TO   SPLITSCI.
216300     MOVE WS-CA-SPLITS                     TO   SPLITSCA.
216400     MOVE WS-LISTCAT-MAXIMUM-LRECL         TO   MAXLRECL.
216500     MOVE WS-LISTCAT-AVERAGE-LRECL         TO   AVGLRECL.
216600     MOVE WS-TRUE-AVERAGE-LRECL            TO   AVGLRECT.
216700     MOVE WS-CI-FREE-BYTES                 TO   CIFBYTES.
216800     MOVE WS-FREE-CI-PERCENTAGE-1          TO   FREECIP1.
216900     MOVE WS-FREE-CI-PERCENTAGE-2          TO   FREECIP2.
217000     MOVE WS-FREE-CI-PERCENTAGE-3          TO   FREECIP3.
217100     MOVE WS-FREE-CI-PERCENTAGE-4          TO   FREECIP4.
217200     MOVE WS-FREE-CI-PERCENTAGE-5          TO   FREECIP5.
217300     MOVE WS-FREE-CI-PERCENTAGE-6          TO   FREECIP6.
217400     MOVE WS-FREE-CI-PERCENTAGE-7          TO   FREECIP7.
217500     MOVE WS-FREE-CI-PERCENTAGE-8          TO   FREECIP8.
217600     MOVE WS-FREE-CI-PERCENTAGE-9          TO   FREECIP9.
217700     MOVE WS-CI-PER-CA                     TO   CIPERCA.
217800
217900* Default colors ...
218000     MOVE 'GREEN' TO COLALC
218100                     COLCAS
218200                     COLCIP
218300                     COLCIS
218400                     COLDCI
218500                     COLEXT
218600                     COLFCA
218700                     COLFCI
218800                     COLICI
218900                     COLKEY
219000                     COLPCT.
219100
219200     MOVE ' ' TO ER-SPECIAL-FLAG.
219300     IF BMC-COMPRESSED-FILE
219400        MOVE '*' TO ER-SPECIAL-FLAG.
219500     IF SIMULATE-CARD
219600        MOVE 'S' TO ER-SPECIAL-FLAG.
219700
219800     IF OPT-CISIZE-AND-100-PERCENT AND
219900        WS-PERCENT-FILE-USED < .95
220000           MOVE 'RED' TO COLPCT
220100           MOVE SPACES TO ER-ACTION, ER-EXCEPTION
220200           STRING 'Percent-used ('       DELIMITED BY SIZE
220300               PCTUSED                   DELIMITED BY SIZE
220400               '%) out of range'         DELIMITED BY SIZE
220500             INTO ER-EXCEPTION
220600           MOVE 'Reallocating to 100%' TO ER-ACTION
220700           MOVE VSAM-DATASET-NAME     TO ER-DATASET-NAME
220800        PERFORM 8000-WRITE-EXCPRPT-RECORD   THRU 8000-EXIT
220900     END-IF.
221000
221100     IF (NOT OPT-CISIZE-AND-100-PERCENT)                   AND
221200        (WS-PERCENT-FILE-USED > WS-PERCENT-USED-UPPER-LIMIT OR
221300         WS-PERCENT-FILE-USED < WS-PERCENT-USED-LOWER-LIMIT)
221400           MOVE 'RED' TO COLPCT
221500           MOVE SPACES TO ER-ACTION, ER-EXCEPTION
221600           STRING 'Percent-used ('       DELIMITED BY SIZE
221700               PCTUSED                   DELIMITED BY SIZE
221800               '%) out of range'         DELIMITED BY SIZE
221900             INTO ER-EXCEPTION
222000           MOVE 'Reallocating to 90%' TO ER-ACTION
222100           MOVE VSAM-DATASET-NAME     TO ER-DATASET-NAME
222200        PERFORM 8000-WRITE-EXCPRPT-RECORD   THRU 8000-EXIT.
222300
222400*    IF (WS-PERCENT-FILE-USED > .64 AND
222500*        WS-PERCENT-FILE-USED < .71) OR
222600*       (WS-PERCENT-FILE-USED > .90 AND
222700*        WS-PERCENT-FILE-USED < .95)
222800*          MOVE 'YELLOW' TO COLPCT
222900*    END-IF.
223000
223100     IF WS-INDEX-CISIZE < 2048
223200        MOVE 'RED' TO COLICI
223300        MOVE SPACES TO ER-ACTION, ER-EXCEPTION
223400        STRING 'Index CISIZE ('          DELIMITED BY SIZE
223500               CISIZEI                   DELIMITED BY SIZE
223600               ') too small'             DELIMITED BY SIZE
223700          INTO ER-EXCEPTION
223800        MOVE 'Changing to 2048'       TO ER-ACTION
223900        MOVE VSAM-DATASET-NAME        TO ER-DATASET-NAME
224000        PERFORM 8000-WRITE-EXCPRPT-RECORD   THRU 8000-EXIT.
224100
224200     IF WS-INDEX-CISIZE > 2048
224300        MOVE 'YELLOW' TO COLICI.
224400
224500     IF WS-DATA-CISIZE  < 4096
224600        MOVE 'RED' TO COLDCI
224700        MOVE SPACES TO ER-ACTION, ER-EXCEPTION
224800        STRING 'Data CISIZE ('           DELIMITED BY SIZE
224900               CISIZED                   DELIMITED BY SIZE
225000               ') too small'             DELIMITED BY SIZE
225100          INTO ER-EXCEPTION
225200        MOVE 'Changing to 4096'       TO ER-ACTION
225300        MOVE VSAM-DATASET-NAME        TO ER-DATASET-NAME
225400        PERFORM 8000-WRITE-EXCPRPT-RECORD   THRU 8000-EXIT
225500        IF PRESERVE-CISIZE
225600           MOVE SPACES TO EXCPRPT-RECORD
225700           MOVE '*** NOTE ***' TO VSAM-DATASET-NAME
225800           MOVE '''PRESERVE-CISIZE OPTION TURNED ON''' TO
225900                ER-EXCEPTION
226000           MOVE 'DATA CISIZE NOT CHANGED' TO ER-ACTION.
226100
226200     IF WS-KEY-LENGTH   > 30    AND
226300        WS-DATA-CISIZE  < 8192
226400           MOVE 'YELLOW' TO COLKEY.
226500
226600     IF WS-EXTENTS      > 2     AND
226700        WS-EXTENTS      < WS-EXTENTS-UPPER-LIMIT
226800           MOVE 'YELLOW' TO COLEXT.
226900
227000     IF WS-EXTENTS      > WS-EXTENTS-UPPER-LIMIT
227100        MOVE 'RED' TO COLEXT
227200        MOVE SPACES TO ER-ACTION, ER-EXCEPTION
227300        STRING 'Number of extents ('     DELIMITED BY SIZE
227400               EXTENTS                   DELIMITED BY SIZE
227500               ') out of range'          DELIMITED BY SIZE
227600          INTO ER-EXCEPTION
227700        MOVE 'Reallocating the file'  TO ER-ACTION
227800        MOVE VSAM-DATASET-NAME        TO ER-DATASET-NAME
227900        PERFORM 8000-WRITE-EXCPRPT-RECORD   THRU 8000-EXIT.
228000
228100     IF WS-CI-SPLITS    > 50    AND
228200        WS-CI-SPLITS    < WS-CISPLIT-UPPER-LIMIT
228300           MOVE 'YELLOW' TO COLCIS.
228400
228500     IF WS-CI-SPLITS    > WS-CISPLIT-UPPER-LIMIT
228600        MOVE 'RED' TO COLCIS
228700        MOVE SPACES TO ER-ACTION, ER-EXCEPTION
228800        STRING 'CI splits ('             DELIMITED BY SIZE
228900               SPLITSCI                  DELIMITED BY SIZE
229000               ') excessive'             DELIMITED BY SIZE
229100          INTO ER-EXCEPTION
229200        MOVE 'Reallocating the file'  TO ER-ACTION
229300        MOVE VSAM-DATASET-NAME        TO ER-DATASET-NAME
229400        PERFORM 8000-WRITE-EXCPRPT-RECORD   THRU 8000-EXIT.
229500
229600     IF WS-CA-SPLITS    > 20    AND
229700        WS-CA-SPLITS    < WS-CASPLIT-UPPER-LIMIT
229800           MOVE 'YELLOW' TO COLCAS.
229900
230000     IF WS-CA-SPLITS    > WS-CASPLIT-UPPER-LIMIT
230100        MOVE 'RED' TO COLCAS
230200        MOVE SPACES TO ER-ACTION, ER-EXCEPTION
230300        STRING 'CA splits ('             DELIMITED BY SIZE
230400               SPLITSCA                  DELIMITED BY SIZE
230500               ') excessive'             DELIMITED BY SIZE
230600          INTO ER-EXCEPTION
230700        MOVE VSAM-DATASET-NAME        TO ER-DATASET-NAME
230800        PERFORM 8000-WRITE-EXCPRPT-RECORD   THRU 8000-EXIT.
230900
231000     IF WS-FREESPACE-PERCENT-CI > 15 AND
231100        WS-FREESPACE-PERCENT-CI < WS-CI-FREE-UPPER-LIMIT
231200           MOVE 'YELLOW' TO COLFCI.
231300
231400     IF WS-FREESPACE-PERCENT-CI > WS-CI-FREE-UPPER-LIMIT
231500        MOVE 'RED' TO COLFCI
231600        MOVE SPACES TO ER-ACTION, ER-EXCEPTION
231700        STRING 'CI free space % ('       DELIMITED BY SIZE
231800               FREECI                    DELIMITED BY SIZE
231900               '%) is excessive'         DELIMITED BY SIZE
232000          INTO ER-EXCEPTION
232100        STRING 'Changing to '            DELIMITED BY SIZE
232200               WS-CI-FREE-UPPER-LIMIT    DELIMITED BY SIZE
232300               '%'                       DELIMITED BY SIZE
232400          INTO ER-ACTION
232500        MOVE VSAM-DATASET-NAME        TO ER-DATASET-NAME
232600        PERFORM 8000-WRITE-EXCPRPT-RECORD   THRU 8000-EXIT.
232700
232800     IF WS-FREESPACE-PERCENT-CA > 10 AND
232900        WS-FREESPACE-PERCENT-CA < WS-CA-FREE-UPPER-LIMIT
233000           MOVE 'YELLOW' TO COLFCA.
233100
233200     IF WS-FREESPACE-PERCENT-CA > WS-CA-FREE-UPPER-LIMIT
233300        MOVE 'RED' TO COLFCA
233400        MOVE SPACES TO ER-ACTION, ER-EXCEPTION
233500        STRING 'CA free space % ('       DELIMITED BY SIZE
233600               FREECA                    DELIMITED BY SIZE
233700               '%) is excessive'         DELIMITED BY SIZE
233800          INTO ER-EXCEPTION
233900        STRING 'Changing to '            DELIMITED BY SIZE
234000               WS-CA-FREE-UPPER-LIMIT    DELIMITED BY SIZE
234100               '%'                       DELIMITED BY SIZE
234200          INTO ER-ACTION
234300        MOVE VSAM-DATASET-NAME        TO ER-DATASET-NAME
234400        PERFORM 8000-WRITE-EXCPRPT-RECORD   THRU 8000-EXIT.
234500
234600     IF WS-FREESPACE-PERCENT-CI > 0
234700        IF WS-CI-FREE-BYTES < WS-TRUE-AVERAGE-LRECL
234800           MOVE 'RED' TO COLCIP
234900           MOVE SPACES TO ER-ACTION, ER-EXCEPTION
235000           STRING 'CI free space in bytes (' DELIMITED BY SIZE
235100                  CIFBYTES               DELIMITED BY SIZE
235200                  ') < AVGLRECL'         DELIMITED BY SIZE
235300             INTO ER-EXCEPTION
235400           STRING 'Increasing to '       DELIMITED BY SIZE
235500                  FREECIP1               DELIMITED BY SIZE
235600                  '%'                    DELIMITED BY SIZE
235700             INTO ER-ACTION
235800           MOVE VSAM-DATASET-NAME        TO ER-DATASET-NAME
235900           PERFORM 8000-WRITE-EXCPRPT-RECORD THRU 8000-EXIT.
236000
236100     IF WS-ALLOCATED-CYLINDERS > 500 AND
236200        WS-ALLOCATED-CYLINDERS < 1200
236300           MOVE 'YELLOW' TO COLALC.
236400
236500     IF WS-ALLOCATED-CYLINDERS > 1199
236600        MOVE 'RED' TO COLALC.
236700
236800     IF IMBEDDED-FILE
236900        MOVE 'IMBED'    TO COLFLG1
237000        MOVE 'IMBED option detected'  TO ER-EXCEPTION
237100        MOVE 'Changing to NOIMBED'    TO ER-ACTION
237200        MOVE VSAM-DATASET-NAME        TO ER-DATASET-NAME
237300        PERFORM 8000-WRITE-EXCPRPT-RECORD   THRU 8000-EXIT.
237400
237500     IF RECOVERY-FLAG
237600        MOVE 'RECOVERY' TO COLFLG2
237700        MOVE 'RECOVERY mode detected' TO ER-EXCEPTION
237800        MOVE 'Changing to SPEED mode' TO ER-ACTION
237900        MOVE VSAM-DATASET-NAME        TO ER-DATASET-NAME
238000        PERFORM 8000-WRITE-EXCPRPT-RECORD   THRU 8000-EXIT.
238100
238200     IF WRITECHK-FLAG
238300        MOVE 'WRITECHK' TO COLFLG3
238400        MOVE 'WRITECHK mode detected' TO ER-EXCEPTION
238500        MOVE 'Changing to NOWRITECHK' TO ER-ACTION
238600        MOVE VSAM-DATASET-NAME        TO ER-DATASET-NAME
238700        PERFORM 8000-WRITE-EXCPRPT-RECORD   THRU 8000-EXIT.
238800
238900     IF REPLICAT-FLAG
239000        MOVE 'REPLICAT' TO COLFLG4
239100        MOVE 'REPLICAT option detected' TO ER-EXCEPTION
239200        MOVE 'Changing to NOREPLICAT' TO ER-ACTION
239300        MOVE VSAM-DATASET-NAME        TO ER-DATASET-NAME
239400        PERFORM 8000-WRITE-EXCPRPT-RECORD   THRU 8000-EXIT.
239500
239600     IF ERASE-FLAG
239700        MOVE 'ERASE'    TO COLFLG5
239800        MOVE 'ERASE option detected'  TO ER-EXCEPTION
239900        MOVE 'Changing to NOERASE'    TO ER-ACTION
240000        MOVE VSAM-DATASET-NAME        TO ER-DATASET-NAME
240100        PERFORM 8000-WRITE-EXCPRPT-RECORD   THRU 8000-EXIT.
240200
240300 0400-EXIT.
240400     EXIT.
240500     EJECT
240600 0500-TREAT-EXCEPTION.
240700
240800* Here we treat any exceptions ...
240900
241000     IF COLPCT = 'RED' OR
241100        COLICI = 'RED' OR
241200        COLDCI = 'RED' OR
241300        COLEXT = 'RED' OR
241400        COLCIS = 'RED' OR
241500        COLCAS = 'RED' OR
241600        COLFCI = 'RED' OR
241700        COLFCA = 'RED' OR
241800        COLCIP = 'RED' OR
241900        RECOVERY-FLAG  OR
242000        WRITECHK-FLAG  OR
242100        REPLICAT-FLAG  OR
242200        ERASE-FLAG     OR
242300        IMBEDDED-FILE  OR
242400        RUNNING-IN-FOREGROUND
242500           PERFORM 0510-GENERATE-JCL        THRU 0510-EXIT.
242600
242700 0500-EXIT.
242800     EXIT.
242900     EJECT
243000 0510-GENERATE-JCL.
243100
243200     IF COLICI = 'RED'
243300        MOVE 2048                   TO WS-INDEX-CISIZE.
243400
243500     IF COLDCI = 'RED' AND
243600        NOT PRESERVE-CISIZE
243700           MOVE 4096                TO WS-DATA-CISIZE
243800* Recalculated in case the cisize just changed
243900           PERFORM 0210-CALC-FREE-STUFF     THRU 0210-EXIT.
244000
244100     IF (TEST-MACHINE           OR
244200         BATCH-OPTIMAL-CISIZE)  AND
244300         WS-DATA-CISIZE < 18432
244400              MOVE 18432            TO WS-DATA-CISIZE
244500              PERFORM 0210-CALC-FREE-STUFF  THRU 0210-EXIT.
244600
244700* Average LRECL larger than CI free space. Here we make the adjustment.
244800     IF COLCIP = 'RED'
244900        MOVE WS-FREE-CI-PERCENTAGE-1 TO WS-FREESPACE-PERCENT-CI
245000     ELSE
245100        IF COLFCI = 'RED'
245200           PERFORM 0512-CALC-GOOD-CI-FREE   THRU 0512-EXIT.
245300
245400* Recalculated in case the ci free space just changed.
245500     PERFORM 0210-CALC-FREE-STUFF           THRU 0210-EXIT.
245600
245700     IF COLFCA = 'RED'
245800        MOVE WS-CA-FREE-UPPER-LIMIT TO WS-FREESPACE-PERCENT-CA.
245900
246000     PERFORM 0518-CALCULATE-SPACE           THRU 0518-EXIT.
246100
246200* We can't generate JCL if running in TSO, because the screen
246300* asking the user if he wants to reorg hasn't been presented
246400* yet. Paragraf 0600- performs 0519- if that option is
246500* specified.
246600     IF RUNNING-IN-BACKGROUND
246700        IF NOT SIMULATE-CARD
246800           PERFORM 0519-CREATE-JCL          THRU 0519-EXIT.
246900
247000 0510-EXIT.
247100     EXIT.
247200     EJECT
247300 0512-CALC-GOOD-CI-FREE.
247400
247500     IF WS-FREE-CI-PERCENTAGE-1 > WS-CI-FREE-UPPER-LIMIT
247600        GO TO 0512-EXIT
247700     ELSE
247800        IF WS-FREE-CI-PERCENTAGE-2 > WS-CI-FREE-UPPER-LIMIT
247900           MOVE WS-FREE-CI-PERCENTAGE-2 TO
248000                                           WS-FREESPACE-PERCENT-CI
248100     ELSE
248200        IF WS-FREE-CI-PERCENTAGE-3 > WS-CI-FREE-UPPER-LIMIT
248300           MOVE WS-FREE-CI-PERCENTAGE-3 TO WS-FREESPACE-PERCENT-CI
248400     ELSE
248500        IF WS-FREE-CI-PERCENTAGE-4 > WS-CI-FREE-UPPER-LIMIT
248600           MOVE WS-FREE-CI-PERCENTAGE-4 TO WS-FREESPACE-PERCENT-CI
248700     ELSE
248800        IF WS-FREE-CI-PERCENTAGE-5 > WS-CI-FREE-UPPER-LIMIT
248900           MOVE WS-FREE-CI-PERCENTAGE-5 TO WS-FREESPACE-PERCENT-CI
249000     ELSE
249100        IF WS-FREE-CI-PERCENTAGE-6 > WS-CI-FREE-UPPER-LIMIT
249200           MOVE WS-FREE-CI-PERCENTAGE-6 TO WS-FREESPACE-PERCENT-CI
249300     ELSE
249400        IF WS-FREE-CI-PERCENTAGE-7 > WS-CI-FREE-UPPER-LIMIT
249500           MOVE WS-FREE-CI-PERCENTAGE-7 TO WS-FREESPACE-PERCENT-CI
249600     ELSE
249700        IF WS-FREE-CI-PERCENTAGE-8 > WS-CI-FREE-UPPER-LIMIT
249800           MOVE WS-FREE-CI-PERCENTAGE-8 TO WS-FREESPACE-PERCENT-CI
249900     ELSE
250000        IF WS-FREE-CI-PERCENTAGE-9 > WS-CI-FREE-UPPER-LIMIT
250100           MOVE WS-FREE-CI-PERCENTAGE-9 TO WS-FREESPACE-PERCENT-CI
250200     ELSE
250300           MOVE WS-CI-FREE-UPPER-LIMIT TO WS-FREESPACE-PERCENT-CI
250400     .
250500
250600 0512-EXIT.
250700     EXIT.
250800     EJECT
250900 0518-CALCULATE-SPACE.
251000
251100* This is misleading. We're actually calculating CI's per track,
251200* which is the same as blocks per track (except for CI sizes of
251300* 14336, 20480, 22528, 28672, 30720, and 32768 on a 3390 device).
251400* I frankly don't know what to do with these exceptions. Oh well,
251500* a future release...
251600
251700     EVALUATE WS-DATA-CISIZE
251800         WHEN   512 COMPUTE WS-BLOCKS-PER-TRACK = 49
251900         WHEN  1024 COMPUTE WS-BLOCKS-PER-TRACK = 33
252000         WHEN  1536 COMPUTE WS-BLOCKS-PER-TRACK = 26
252100         WHEN  2048 COMPUTE WS-BLOCKS-PER-TRACK = 21
252200         WHEN  2560 COMPUTE WS-BLOCKS-PER-TRACK = 17
252300         WHEN  3072 COMPUTE WS-BLOCKS-PER-TRACK = 15
252400         WHEN  3584 COMPUTE WS-BLOCKS-PER-TRACK = 13
252500         WHEN  4096 COMPUTE WS-BLOCKS-PER-TRACK = 12
252600         WHEN  4608 COMPUTE WS-BLOCKS-PER-TRACK = 10
252700         WHEN  5120 COMPUTE WS-BLOCKS-PER-TRACK = 9
252800         WHEN  5632 COMPUTE WS-BLOCKS-PER-TRACK = 9
252900         WHEN  6144 COMPUTE WS-BLOCKS-PER-TRACK = 8
253000         WHEN  6656 COMPUTE WS-BLOCKS-PER-TRACK = 7
253100         WHEN  7168 COMPUTE WS-BLOCKS-PER-TRACK = 7
253200         WHEN  7680 COMPUTE WS-BLOCKS-PER-TRACK = 6
253300         WHEN  8192 COMPUTE WS-BLOCKS-PER-TRACK = 6
253400         WHEN 10240 COMPUTE WS-BLOCKS-PER-TRACK = 5
253500         WHEN 12288 COMPUTE WS-BLOCKS-PER-TRACK = 4
253600         WHEN 14336 COMPUTE WS-BLOCKS-PER-TRACK = 3
253700         WHEN 16384 COMPUTE WS-BLOCKS-PER-TRACK = 3
253800         WHEN 18432 COMPUTE WS-BLOCKS-PER-TRACK = 3
253900         WHEN 20480 COMPUTE WS-BLOCKS-PER-TRACK = 2
254000         WHEN 22528 COMPUTE WS-BLOCKS-PER-TRACK = 2
254100         WHEN 24576 COMPUTE WS-BLOCKS-PER-TRACK = 2
254200         WHEN 26624 COMPUTE WS-BLOCKS-PER-TRACK = 2
254300         WHEN 28672 COMPUTE WS-BLOCKS-PER-TRACK = 2
254400         WHEN 30720 COMPUTE WS-BLOCKS-PER-TRACK = 1
254500         WHEN 32768 COMPUTE WS-BLOCKS-PER-TRACK = 1
254600     END-EVALUATE.
254700
254800* how many bytes are in the free area of each CI
254900* Recalculated here, because the values may have changed.
255000     COMPUTE WS-CI-FREE-BYTES
255100           = WS-FREESPACE-PERCENT-CI
255200           * WS-DATA-CISIZE
255300           / 100.
255400
255500     COMPUTE WS-RECORDS-PER-CI
255600           = (WS-DATA-CISIZE
255700           -  WS-CI-OVERHEAD
255800           -  WS-CI-FREE-BYTES)
255900           /  WS-TRUE-AVERAGE-LRECL.
256000* With spanned records, we're going to make WS-RECORDS-PER-CI = 1
256100     IF WS-RECORDS-PER-CI < 1
256200        MOVE 1 TO WS-RECORDS-PER-CI.
256300
256400     IF IMBEDDED-FILE
256500        COMPUTE WS-LOADED-CIS-PER-CA
256600              = WS-BLOCKS-PER-TRACK
256700              * (WS-TRACKS-PER-CYL - 1)
256800              * (100 - WS-FREESPACE-PERCENT-CA)
256900              / 100
257000     ELSE
257100        COMPUTE WS-LOADED-CIS-PER-CA
257200              = WS-BLOCKS-PER-TRACK
257300              * WS-TRACKS-PER-CYL
257400              * (100 - WS-FREESPACE-PERCENT-CA)
257500              / 100.
257600
257700     COMPUTE WS-CALC-RECORDS-PER-CYLINDER
257800           = WS-RECORDS-PER-CI
257900           * WS-LOADED-CIS-PER-CA.
258000* Safety ...
258100     IF WS-CALC-RECORDS-PER-CYLINDER < 1
258200        MOVE 1 TO WS-CALC-RECORDS-PER-CYLINDER.
258300
258400* Note: if changing the "109/100" value, make the same change
258500* elsewhere in this program...
258600     IF OPT-CISIZE-AND-100-PERCENT
258700        COMPUTE WS-VSAM-PRIMARY-SPACE
258800              =  WS-RECORDS-IN-FILE
258900              /  WS-CALC-RECORDS-PER-CYLINDER
259000              +  1
259100     ELSE
259200        COMPUTE WS-VSAM-PRIMARY-SPACE
259300              = (WS-RECORDS-IN-FILE * 109 / 100)
259400              /  WS-CALC-RECORDS-PER-CYLINDER
259500              +  1
259600     END-IF.
259700
259800     COMPUTE WS-VSAM-SECONDARY-SPACE ROUNDED
259900           = WS-VSAM-PRIMARY-SPACE
260000           / 10.
260100
260200     IF WS-VSAM-SECONDARY-SPACE = 0
260300        COMPUTE WS-VSAM-SECONDARY-SPACE = 1.
260400
260500     COMPUTE WS-NEW-ANNUAL-FILE-COST ROUNDED
260600           = WS-VSAM-PRIMARY-SPACE
260700           * WS-DAILY-GB-COST
260800           * 365
260900           * WS-GIGABYTE-PER-CYL.
261000
261100     COMPUTE CR-CYLINDER-DIFF
261200           = WS-ALLOCATED-CYLINDERS
261300           - WS-VSAM-PRIMARY-SPACE.
261400
261500     MOVE CR-CYLINDER-DIFF TO SAVEDCYL.
261600
261700     COMPUTE CR-COST-DIFF
261800           = WS-ANNUAL-COST-OF-FILE
261900           - WS-NEW-ANNUAL-FILE-COST.
262000
262100     MOVE CR-COST-DIFF TO SAVEDDOL.
262200
262300     MOVE WS-DATA-CISIZE          TO CR-NEW-DATA-CISIZE
262400                                     NEWDCIS.
262500     MOVE WS-INDEX-CISIZE         TO CR-NEW-INDEX-CISIZE
262600                                     NEWICIS.
262700     MOVE WS-FREESPACE-PERCENT-CA TO CR-NEW-CA-FREE
262800                                     NEWCAFP.
262900     MOVE WS-FREESPACE-PERCENT-CI TO CR-NEW-CI-FREE
263000                                     NEWCIFP.
263100     MOVE WS-VSAM-PRIMARY-SPACE   TO CR-NEW-PRIMARY
263200                                     NEWPRIM.
263300     MOVE WS-VSAM-SECONDARY-SPACE TO CR-NEW-SECONDARY
263400                                     NEWSEC.
263500
263600* Here we check to see if the file should be multi-volume. If so,
263700* we adjust NEWPRIM and NEWSEC, as well as raise a flag, for the
263800* skeleton. We don't change the report, though.
263900     IF WS-VSAM-PRIMARY-SPACE > 2500
264000        EVALUATE TRUE
264100            WHEN WS-VSAM-PRIMARY-SPACE > 2501 AND
264200                 WS-VSAM-PRIMARY-SPACE < 3000
264300                    MOVE '* *' TO VOLUME
264400                    COMPUTE NEWPRIM ROUNDED
264500                          = WS-VSAM-PRIMARY-SPACE / 2
264600            WHEN WS-VSAM-PRIMARY-SPACE > 3001 AND
264700                 WS-VSAM-PRIMARY-SPACE < 4000
264800                    MOVE '* * *' TO VOLUME
264900                    COMPUTE NEWPRIM ROUNDED
265000                          = WS-VSAM-PRIMARY-SPACE / 3
265100            WHEN WS-VSAM-PRIMARY-SPACE > 4001 AND
265200                 WS-VSAM-PRIMARY-SPACE < 5000
265300                    MOVE '* * * *' TO VOLUME
265400                    COMPUTE NEWPRIM ROUNDED
265500                          = WS-VSAM-PRIMARY-SPACE / 4
265600            WHEN WS-VSAM-PRIMARY-SPACE > 5000
265700                 MOVE '* * * * *' TO VOLUME
265800                 COMPUTE NEWPRIM ROUNDED
265900                       = WS-VSAM-PRIMARY-SPACE / 5
266000        END-EVALUATE
266100     ELSE
266200        MOVE '*' TO VOLUME.
266300
266400* Calculate INDEX space values (using a CISIZE of 2048, even if
266500* it's more than that). In English, the formula is (#-of-used-
266600* CA's + #-of-used-CA's / 248) / blocks-per-track.
266700
266800     IF OPT-CISIZE-AND-100-PERCENT
266900        COMPUTE WS-CIS-FOR-INDEX-SET ROUNDED
267000              =  WS-VSAM-PRIMARY-SPACE
267100              /  248
267200              +  1
267300        COMPUTE INDXPRIM ROUNDED
267400              = (WS-VSAM-PRIMARY-SPACE
267500              +  WS-CIS-FOR-INDEX-SET)
267600              /  21
267700              +  1
267800     ELSE
267900        COMPUTE WS-CIS-FOR-INDEX-SET ROUNDED
268000              = (WS-VSAM-PRIMARY-SPACE * 109 / 100)
268100              /  248
268200              +  1
268300        COMPUTE INDXPRIM ROUNDED
268400              = (WS-VSAM-PRIMARY-SPACE * 109 / 100
268500              +  WS-CIS-FOR-INDEX-SET)
268600              /  21
268700              +  1
268800     END-IF.
268900
269000     COMPUTE INDXSEC ROUNDED
269100           = INDXPRIM
269200           * .10.
269300
269400     MOVE WS-NEW-ANNUAL-FILE-COST TO CR-NEW-COST.
269500
269600     COMPUTE WS-NEW-TOTAL-DOLLARS
269700           = WS-NEW-TOTAL-DOLLARS
269800           + WS-NEW-ANNUAL-FILE-COST.
269900
270000     COMPUTE WS-OLD-TOTAL-DOLLARS
270100           = WS-OLD-TOTAL-DOLLARS
270200           + WS-ANNUAL-COST-OF-FILE.
270300
270400     COMPUTE WS-NEW-TOTAL-CYLS
270500           = WS-NEW-TOTAL-CYLS
270600           + WS-VSAM-PRIMARY-SPACE.
270700
270800     COMPUTE WS-OLD-TOTAL-CYLS
270900           = WS-OLD-TOTAL-CYLS
271000           + WS-ALLOCATED-CYLINDERS.
271100
271200     MOVE VSAM-DATASET-NAME TO CH-VSAM-DATASET-NAME-CR.
271300     MOVE PDS-UPDATE-MEMBER TO PDSMEM.
271400
271500     MOVE LINE-0-CR TO CHNGRPT-RECORD.
271600     PERFORM 8100-WRITE-CHNGRPT-RECORD      THRU 8100-EXIT.
271700     MOVE LINE-1-CR TO CHNGRPT-RECORD.
271800     PERFORM 8100-WRITE-CHNGRPT-RECORD      THRU 8100-EXIT.
271900     MOVE LINE-2-CR TO CHNGRPT-RECORD.
272000     PERFORM 8100-WRITE-CHNGRPT-RECORD      THRU 8100-EXIT.
272100     MOVE LINE-3-CR TO CHNGRPT-RECORD.
272200     PERFORM 8100-WRITE-CHNGRPT-RECORD      THRU 8100-EXIT.
272300     MOVE LINE-4-CR TO CHNGRPT-RECORD.
272400     PERFORM 8100-WRITE-CHNGRPT-RECORD      THRU 8100-EXIT.
272500     MOVE LINE-5-CR TO CHNGRPT-RECORD.
272600     PERFORM 8100-WRITE-CHNGRPT-RECORD      THRU 8100-EXIT.
272700     MOVE LINE-6-CR TO CHNGRPT-RECORD.
272800     PERFORM 8100-WRITE-CHNGRPT-RECORD      THRU 8100-EXIT.
272900     MOVE LINE-7-CR TO CHNGRPT-RECORD.
273000     PERFORM 8100-WRITE-CHNGRPT-RECORD      THRU 8100-EXIT.
273100
273200 0518-EXIT.
273300     EXIT.
273400     EJECT
273500 0519-CREATE-JCL.
273600
273700* If we try to backup an empty file, we'll just get an open error
273800* of 12, so we'll just delete/define the file ...
273900     IF WS-PERCENT-FILE-USED = 0   AND
274000        WS-RECORDS-IN-FILE   = 0
274100           GO TO 0519-UPDATE-PDS.
274200
274300     MOVE 'FTINCL AP1PVSM2' TO ISPF-BUFFER.
274400     CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER.
274500
274600     IF RETURN-CODE NOT = 0
274700*           8 - SKELETON DOES NOT EXIST
274800*          12 - SKELETON OR TABLE IN USE; ENQ FAILED
274900*          16 - DATA TRUNCATION OCCURRED; OR SKELETON LIBRARY
275000*               AND/OR OUTPUT FILE NOT ALLOCATED
275100*          20 - SEVERE ERROR
275200        IF RUNNING-IN-FOREGROUND
275300           MOVE RETURN-CODE  TO ABCODE
275400           MOVE '0519-CREATE-JCL' TO ABPARA
275500           MOVE 'INCLUDE AP1PVSM2 FAILED' TO ABMSG
275600           MOVE 'UNABLE TO INCLUDE SKELETON - NOT FOUND?'
275700                             TO ABMISC
275800           MOVE VSAM-STATUS  TO ABVSAM
275900           PERFORM 9999-ISPF-ABEND          THRU 9999-EXIT
276000        ELSE
276100           MOVE RETURN-CODE  TO ABCODE
276200           DISPLAY '0519-CREATE-JCL'
276300           DISPLAY 'INCLUDE AP1PVSM2 SKELETON FAILED'
276400           MOVE 107 TO WS-ABEND-CODE
276500           CALL 'ILBOABN0' USING WS-ABEND-CODE
276600        END-IF.
276700
276800 0519-DELETE-DEFINE.
276900
277000     MOVE 'FTINCL AP1PVSM3' TO ISPF-BUFFER.
277100     CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER.
277200
277300     IF RETURN-CODE NOT = 0
277400*           8 - SKELETON DOES NOT EXIST
277500*          12 - SKELETON OR TABLE IN USE; ENQ FAILED
277600*          16 - DATA TRUNCATION OCCURRED; OR SKELETON LIBRARY
277700*               AND/OR OUTPUT FILE NOT ALLOCATED
277800*          20 - SEVERE ERROR
277900        IF RUNNING-IN-FOREGROUND
278000           MOVE RETURN-CODE  TO ABCODE
278100           MOVE '0519-DELETE-DEFINE' TO ABPARA
278200           MOVE 'INCLUDE AP1PVSM3 FAILED' TO ABMSG
278300           MOVE 'UNABLE TO INCLUDE SKELETON - NOT FOUND?'
278400                             TO ABMISC
278500           MOVE VSAM-STATUS  TO ABVSAM
278600           PERFORM 9999-ISPF-ABEND          THRU 9999-EXIT
278700        ELSE
278800           MOVE RETURN-CODE  TO ABCODE
278900           DISPLAY '0519-DELETE-DEFINE'
279000           DISPLAY 'INCLUDE AP1PVSM3 SKELETON FAILED'
279100           MOVE 107 TO WS-ABEND-CODE
279200           CALL 'ILBOABN0' USING WS-ABEND-CODE
279300        END-IF.
279400
279500     IF WS-PERCENT-FILE-USED = 0   AND
279600        WS-RECORDS-IN-FILE   = 0
279700           GO TO 0519-UPDATE-PDS.
279800
279900     MOVE 'FTINCL AP1PVSM4' TO ISPF-BUFFER.
280000     CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER.
280100
280200     IF RETURN-CODE NOT = 0
280300*           8 - SKELETON DOES NOT EXIST
280400*          12 - SKELETON OR TABLE IN USE; ENQ FAILED
280500*          16 - DATA TRUNCATION OCCURRED; OR SKELETON LIBRARY
280600*               AND/OR OUTPUT FILE NOT ALLOCATED
280700*          20 - SEVERE ERROR
280800        IF RUNNING-IN-FOREGROUND
280900           MOVE RETURN-CODE  TO ABCODE
281000           MOVE '0519-CREATE-JCL' TO ABPARA
281100           MOVE 'INCLUDE AP1PVSM4 FAILED' TO ABMSG
281200           MOVE 'UNABLE TO INCLUDE SKELETON - NOT FOUND?'
281300                             TO ABMISC
281400           MOVE VSAM-STATUS  TO ABVSAM
281500           PERFORM 9999-ISPF-ABEND          THRU 9999-EXIT
281600        ELSE
281700           MOVE RETURN-CODE  TO ABCODE
281800           DISPLAY '0519-CREATE-JCL'
281900           DISPLAY 'INCLUDE AP1PVSM4 SKELETON FAILED'
282000           MOVE 107 TO WS-ABEND-CODE
282100           CALL 'ILBOABN0' USING WS-ABEND-CODE
282200        END-IF.
282300
282400 0519-UPDATE-PDS.
282500
282600     MOVE 'FTINCL AP1PVSM6' TO ISPF-BUFFER.
282700     CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER.
282800
282900     IF RETURN-CODE NOT = 0
283000*           8 - SKELETON DOES NOT EXIST
283100*          12 - SKELETON OR TABLE IN USE; ENQ FAILED
283200*          16 - DATA TRUNCATION OCCURRED; OR SKELETON LIBRARY
283300*               AND/OR OUTPUT FILE NOT ALLOCATED
283400*          20 - SEVERE ERROR
283500        IF RUNNING-IN-FOREGROUND
283600           MOVE RETURN-CODE  TO ABCODE
283700           MOVE '0519-UPDATE-PDS' TO ABPARA
283800           MOVE 'INCLUDE AP1PVSM6 FAILED' TO ABMSG
283900           MOVE 'UNABLE TO INCLUDE SKELETON - NOT FOUND?'
284000                             TO ABMISC
284100           MOVE VSAM-STATUS  TO ABVSAM
284200           PERFORM 9999-ISPF-ABEND          THRU 9999-EXIT
284300        ELSE
284400           MOVE RETURN-CODE  TO ABCODE
284500           DISPLAY '0519-UPDATE-PDS'
284600           DISPLAY 'INCLUDE AP1PVSM6 SKELETON FAILED'
284700           DISPLAY ABCODE
284800           MOVE 107 TO WS-ABEND-CODE
284900           CALL 'ILBOABN0' USING WS-ABEND-CODE
285000        END-IF.
285100
285200 0519-EXIT.
285300     EXIT.
285400     EJECT
285500 0600-GENERATE-JOBS.
285600
285700* This paragraf is invoked only if running under TSO ...
285800
285900     IF VSMREORG = 'YES'
286000        PERFORM 0519-CREATE-JCL             THRU 0519-EXIT
286100        MOVE RECTOTAL TO RECCNT
286200        MOVE 'DISPLAY PANEL(AP1PVSM1)' TO ISPF-BUFFER
286300        CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER
286400        IF RETURN-CODE = 8
286500           PERFORM 1000-FTCLOSE             THRU 1000-EXIT
286600           GO TO 0600-EXIT
286700        END-IF
286800     END-IF.
286900
287000     IF VSMAVGL  = 'YES' OR
287100        VSMKEYL  = 'YES'
287200           MOVE 'FTINCL AP1PVSM5' TO ISPF-BUFFER
287300           CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER.
287400
287500     PERFORM 1000-FTCLOSE                   THRU 1000-EXIT.
287600
287700* Edit/Submit generated JCL ...
287800     MOVE 'SELECT CMD(GENSUB ''&ZTEMPF'')' TO ISPF-BUFFER.
287900     CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER.
288000
288100 0600-EXIT.
288200     EXIT.
288300     EJECT
288400 1000-FTCLOSE.
288500
288600* The FTCLOSE is unconditional, because we've generated
288700* reorg JCL anyhow, even if the user doesn't display it.
288800
288900     MOVE 'FTCLOSE' TO ISPF-BUFFER.
289000     CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER.
289100     IF RETURN-CODE NOT = 0
289200*           4 - MEMBER EXISTS, NOREPL WAS SPECIFIED
289300*           8 - FILE NOT OPEN
289400*          12 - OUTPUT FILE IN USE; ENQ FAILED
289500*          16 - SKELETON LIBRARY OR OUTPUT FILE NOT ALLOCATED
289600*          20 - SEVERE ERROR
289700        IF RUNNING-IN-FOREGROUND
289800           MOVE RETURN-CODE      TO ABCODE
289900           MOVE '1000-FTCLOSE'   TO ABPARA
290000           MOVE 'FTCLOSE FAILED' TO ABMSG
290100           MOVE 'UNABLE TO CLOSE FILE TAILORING - ENQ PROBLEM?'
290200                             TO ABMISC
290300           MOVE VSAM-STATUS  TO ABVSAM
290400           PERFORM 9999-ISPF-ABEND          THRU 9999-EXIT
290500        ELSE
290600           DISPLAY '1000-FTCLOSE'
290700           DISPLAY 'FTCLOSE FOR REORG/GEN FAILED'
290800           DISPLAY
290900            'UNABLE TO CLOSE FILE TAILORING - ENQ PROBLEM?'
291000           MOVE 107 TO WS-ABEND-CODE
291100           CALL 'ILBOABN0' USING WS-ABEND-CODE
291200        END-IF.
291300
291400 1000-EXIT.
291500     EXIT.
291600     EJECT
291700 8000-WRITE-EXCPRPT-RECORD.
291800
291900     IF LINE-COUNT-ER > 59
292000        MOVE EXCPRPT-RECORD TO EXCPRPT-RECORD-HOLD
292100        PERFORM 8005-HEADINGS               THRU 8005-EXIT
292200        MOVE EXCPRPT-RECORD-HOLD TO EXCPRPT-RECORD.
292300
292400* Put a blank line between groups of dataset names ...
292500     IF VSAM-DATASET-NAME-HOLD NOT = VSAM-DATASET-NAME
292600        MOVE VSAM-DATASET-NAME TO VSAM-DATASET-NAME-HOLD
292700        MOVE EXCPRPT-RECORD TO EXCPRPT-RECORD-HOLD
292800        MOVE SPACES TO EXCPRPT-RECORD
292900        WRITE EXCPRPT-RECORD
293000        MOVE EXCPRPT-RECORD-HOLD TO EXCPRPT-RECORD
293100        ADD 1 TO LINE-COUNT-ER.
293200
293300     WRITE EXCPRPT-RECORD.
293400     ADD 1 TO LINE-COUNT-ER.
293500
293600 8000-EXIT.
293700     EXIT.
293800     EJECT
293900 8005-HEADINGS.
294000
294100     ADD  1          TO PAGE-COUNT-ER.
294200     MOVE 7          TO LINE-COUNT-ER.
294300     MOVE PAGE-COUNT-ER TO TL-PAGENO.
294400
294500     MOVE TITLE-LINE-1     TO EXCPRPT-RECORD.
294600     WRITE EXCPRPT-RECORD.
294700
294800     MOVE TITLE-LINE-ER-2  TO EXCPRPT-RECORD.
294900     WRITE EXCPRPT-RECORD.
295000
295100     MOVE TITLE-LINE-ER-3  TO EXCPRPT-RECORD.
295200     WRITE EXCPRPT-RECORD.
295300
295400     MOVE TITLE-LINE-ER-4  TO EXCPRPT-RECORD.
295500     WRITE EXCPRPT-RECORD.
295600
295700     MOVE SPACES TO EXCPRPT-RECORD.
295800     WRITE EXCPRPT-RECORD.
295900
296000     MOVE COLUMN-HEADING-ER TO EXCPRPT-RECORD.
296100     WRITE EXCPRPT-RECORD.
296200
296300     MOVE SPACES TO EXCPRPT-RECORD.
296400     WRITE EXCPRPT-RECORD.
296500
296600 8005-EXIT.
296700     EXIT.
296800     EJECT
296900 8100-WRITE-CHNGRPT-RECORD.
297000
297100     IF LINE-COUNT-CR > 59
297200        MOVE CHNGRPT-RECORD TO CHNGRPT-RECORD-HOLD
297300        PERFORM 8105-HEADINGS              THRU 8105-EXIT
297400        MOVE CHNGRPT-RECORD-HOLD TO CHNGRPT-RECORD.
297500
297600     WRITE CHNGRPT-RECORD.
297700     ADD 1 TO LINE-COUNT-CR.
297800
297900 8100-EXIT.
298000     EXIT.
298100     EJECT
298200 8105-HEADINGS.
298300
298400
298500     ADD  1          TO PAGE-COUNT-CR.
298600     MOVE 5          TO LINE-COUNT-CR.
298700     MOVE PAGE-COUNT-CR TO TL-PAGENO.
298800
298900     MOVE TITLE-LINE-1     TO CHNGRPT-RECORD.
299000     WRITE CHNGRPT-RECORD.
299100
299200     MOVE TITLE-LINE-CR-2  TO CHNGRPT-RECORD.
299300     WRITE CHNGRPT-RECORD.
299400
299500     MOVE COLUMN-HEADING-CR TO CHNGRPT-RECORD.
299600     WRITE CHNGRPT-RECORD.
299700
299800 8105-EXIT.
299900     EXIT.
300000     EJECT
300100 9000-READ-LISTCAT.
300200
300300     READ LISTCAT NEXT RECORD INTO
300400          WS-LISTCAT-RECORD
300500          AT END
300600             MOVE 'Y' TO END-OF-FILE-SW
300700             GO TO 9000-EXIT.
300800
300900* Skip over title lines.
301000     IF WS-LISTCAT-RECORD (1:1) = '1'
301100        GO TO 9000-READ-LISTCAT.
301200
301300* If we hit the index portion of a VSAM file, we're essentially done.
301400     MOVE 0 TO OFFSET.
301500     INSPECT WS-LISTCAT-RECORD TALLYING OFFSET
301600                FOR ALL 'INDEX ---'.
301700     IF OFFSET > 0
301800        MOVE WS-LISTCAT-RECORD (18:44) TO INDEXNAM
301900        MOVE 'Y' TO END-OF-FILE-SW
302000        GO TO 9000-EXIT.
302100
302200 9000-EXIT.
302300     EXIT.
302400     EJECT
302500 9010-READ-DSNLIST.
302600
302700     READ DSNLIST  NEXT RECORD
302800          AT END
302900             MOVE 'Y' TO END-OF-DSN-FILE-SW
303000             GO TO 9010-EXIT.
303100
303200* Skip over comment lines.
303300     IF COMMENT-CARD
303400        GO TO 9010-READ-DSNLIST.
303500
303600 9010-EXIT.
303700     EXIT.
303800     EJECT
303900 9950-TERM.
304000
304100     MOVE WS-NEW-TOTAL-DOLLARS    TO CR-NEW-TOTAL-DOLLARS.
304200     MOVE WS-OLD-TOTAL-DOLLARS    TO CR-OLD-TOTAL-DOLLARS.
304300     MOVE WS-NEW-TOTAL-CYLS       TO CR-NEW-TOTAL-CYLS.
304400     MOVE WS-OLD-TOTAL-CYLS       TO CR-OLD-TOTAL-CYLS.
304500
304600     COMPUTE CR-TOTAL-CYLS-SAVED
304700           = WS-OLD-TOTAL-CYLS
304800           - WS-NEW-TOTAL-CYLS.
304900
305000     COMPUTE CR-TOTAL-DOLLARS-SAVED
305100           = WS-OLD-TOTAL-DOLLARS
305200           - WS-NEW-TOTAL-DOLLARS.
305300
305400     MOVE LINE-8-CR TO CHNGRPT-RECORD.
305500     PERFORM 8100-WRITE-CHNGRPT-RECORD      THRU 8100-EXIT.
305600
305700     MOVE LINE-9-CR TO CHNGRPT-RECORD.
305800     PERFORM 8100-WRITE-CHNGRPT-RECORD      THRU 8100-EXIT.
305900
306000     PERFORM 0017-VDELETE                   THRU 0017-EXIT.
306100
306200     IF RUNNING-IN-BACKGROUND
306300        CLOSE DSNLIST.
306400
306500     IF RUNNING-IN-FOREGROUND
306600        CLOSE LISTCAT.
306700
306800     CLOSE EXCPRPT, CHNGRPT, REGISET.
306900
307000 9950-EXIT.
307100     EXIT.
307200
307300 9999-ISPF-ABEND.
307400
307500     MOVE 'DISPLAY PANEL(GMABEND)' TO ISPF-BUFFER.
307600     CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER.
307700
307800     PERFORM 9950-TERM                      THRU 9950-EXIT.
307900
308000     STOP RUN.
308100
308200 9999-EXIT.
308300     EXIT.
