./ ADD NAME=AP1PVSAM 0105-99014-01062-2217-00020-00016-00000-C095775
//@&ZUSER JOB (DQFQP),'VSAM UTILITY',
//             CLASS=T,COND=(0,NE),
)SEL &ENVIRON = F
//     NOTIFY=&ZUSER,
)ENDSEL
//     MSGCLASS=A
//*    MSGCLASS=&MSGCLASS
/*ROUTE PRINT FETCH
/*JOBPARM ROOM=RB
//*
//* Recreate VSAM file(s)
//* (Data is preserved)
//*
//*   Restart instructions:
//*     1) Copy this JCL to whichever library you need to
//*     2) Remove the steps that have already run
//*     3) Submit the job
//*
//CLEAN    EXEC PGM=U11RMS,PARM='P' <=== THIS MIGHT NOW WORK IN ALL
//*                                 <=== SHOPS
./ ADD NAME=AP1PVSM2
)TB 12
//*
//*  Redefine and reload a VSAM file...
//*
//*  DSN=&DSNAME
//*

)SEL &CNT = &Z
)SET CNT  = 0
)ENDSEL

)SET CNT  = &CNT + 1

//BKUP&CNT!EXEC PGM=IDCAMS
//SYSIN     DD *
 REPRO IFILE(IN01) OFILE(OUT01) REUSE
//IN01      DD DSN=&DSNAME,DISP=SHR,
//             AMP=('BUFND=40,BUFNI=20')
//OUT01     DD DSN=&BKUPHLQ..&DSNAME,
//             DISP=(,CATLG,DELETE),
//             SPACE=(CYL,(&NEWPRIM,&NEWSEC),RLSE),
//             RECFM=VB,LRECL=27994,BLKSIZE=0,BUFNO=20
//SYSPRINT  DD SYSOUT=*
./ ADD NAME=AP1PVSM3 0100-99028-99028-1717-00063-00063-00000-C095775
)TB 12
//RDEF&CNT!EXEC PGM=IDCAMS
//SYSPRINT  DD SYSOUT=*
//SYSIN     DD *
    DELETE &DSNAME CLUSTER
    DEFINE CLUSTER -
       (NAME(&DSNAME) -
       FREESPACE(&NEWCIFP &NEWCAFP) -
       INDEXED -
       KEYS(&KEYLEN &KEYOFF) -

)SEL &MACHINE = PROD
       VOLUME(&VOLSER) -
)ENDSEL

       RECORDSIZE(&AVGLRECL &MAXLRECL) -
       REUSE -
       SHAREOPTIONS(2 3) -
       SPEED ) -
    DATA(NAME(&DSNAME..DATA) -
     CYLINDERS(&NEWPRIM &NEWSEC) -
     CONTROLINTERVALSIZE(&NEWDCIS)) -
    INDEX(NAME(&DSNAME..INDEX) -
     TRACKS(1 5) -
     CONTROLINTERVALSIZE(&NEWICIS))

    IF MAXCC = 8 THEN SET MAXCC = 0
)SEL &PDSMEM ¬= &Z
)SEL &ENVIRON = B
//*
//* Save off delete/define cards to specified PDS member
//* (specified on the DSNLIST input card).
//*
//PDS&CNT!EXEC PGM=ICEGENER
//SYSIN     DD DUMMY
//SYSUT1    DD *
    DELETE &DSNAME CLUSTER
    DEFINE CLUSTER -
       (NAME(&DSNAME) -
       FREESPACE(&NEWCIFP &NEWCAFP) -
       INDEXED -
       KEYS(&KEYLEN &KEYOFF) -

)SEL &MACHINE = PROD
       VOLUME(&VOLSER) -
)ENDSEL

       RECORDSIZE(&AVGLRECL &MAXLRECL) -
       REUSE -
       SHAREOPTIONS(2 3) -
       SPEED ) -
    DATA(NAME(&DSNAME..DATA) -
     CYLINDERS(&NEWPRIM &NEWSEC) -
     CONTROLINTERVALSIZE(&NEWDCIS)) -
    INDEX(NAME(&DSNAME..INDEX) -
     TRACKS(1 5) -
     CONTROLINTERVALSIZE(&NEWICIS))

    IF MAXCC = 8 THEN SET MAXCC = 0
//SYSUT2    DD DSN=&PDSMEM,DISP=SHR
//SYSPRINT  DD SYSOUT=*
)ENDSEL
)ENDSEL
./ ADD NAME=AP1PVSM4
)TB 12
//REST&CNT!EXEC PGM=IDCAMS
//SYSIN     DD *
 REPRO IFILE(IN01) OFILE(OUT01) REUSE
//IN01      DD DSN=&BKUPHLQ..&DSNAME,
//             DISP=SHR
//OUT01     DD DSN=&DSNAME,DISP=SHR,
//             AMP=('BUFND=40,BUFNI=20')
//SYSPRINT  DD SYSOUT=*
//DELT&CNT!EXEC PGM=IEFBR14
//DD1       DD DSN=&BKUPHLQ..&DSNAME,
//             DISP=(OLD,DELETE,DELETE)
./ ADD NAME=AP1PVSM5 0100-99014-99014-1719-00166-00166-00000-C095775
)SEL &VSMKEYL = YES
//*
//*  VSAM index analysis. This program will tell you if the index
//*  CI is large enough to properly address all data CIs in the
//*  control area.
//*
//*  DSN=&INDEXNAM
//*
//STEP020  EXEC SAS
//*******************************************************************
//* VSAMCI - CHANGE CICA=XX       SOURCE: MAINFRAME JOURNAL         *
//*******************************************************************
//IXFILE    DD DSN=&INDEXNAM,DISP=SHR
//RESULTS   DD SYSOUT=*
//SYSIN     DD *
DATA _NULL_;
CICA=&CIPERCA;
INFILE IXFILE END=NOMORE;
INPUT @1   IXLEN    PIB2.
      @4   PTRLEN   PIB1.
      @17  IXTYPE   PIB1.
      @19  UNUSPC   PIB2.
      @21  FIRSTKEY PIB2.;
IF _N_ = 1 THEN DO;
  KEYSUM  = 0;
  IXRECS  = 0;
  TOTCIS  = 0;
  TOTUCIS = 0;
END;

IF IXTYPE = 1 THEN GO TO CONT;

GO TO READNEXT;

CONT: IXRECS + 1;
KEYSPACE = IXLEN - FIRSTKEY;

IF UNUSPC = 24 THEN
  DO;
    AVGKEY = KEYSPACE / CICA;
    AVGKEY = ROUND(AVGKEY);
    AVGKEY + 1;
    KEYSUM + AVGKEY;
    IF NOMORE = 0 THEN
      DO;
        TOTCIS + CICA;
      END;
    FILE RESULTS;
    PUT @08 'INDEX RECORD '
        @25 IXRECS
        @35 'AVERAGE KEY LENGTH'
        @60 AVGKEY  3.;
    GO TO READNEXT;
  END;

LISTLEN = UNUSPC - 24;

IF PTRLEN = 1 THEN DO;
   NOPTRS = LISTLEN / 1;
   END;

IF PTRLEN = 3 THEN DO;
   NOPTRS = LISTLEN / 2;
   END;

IF PTRLEN = 7 THEN DO;
   NOPTRS = LISTLEN / 3;
   END;

USEDCI = CICA - NOPTRS;
AVGKEY = KEYSPACE / USEDCI;
AVGKEY = ROUND(AVGKEY);
AVGKEY + 1;
KEYSUM + AVGKEY;

IF NOMORE = 0 THEN DO;
   TOTCIS + CICA;
   TOTUCIS + NOPTRS;
   END;

FILE RESULTS;
PUT @08 'INDEX RECORD '
    @25 IXRECS
    @35 'AVERAGE KEY LENGTH'
    @60 AVGKEY  3.;

GO TO READNEXT;

READNEXT: IF NOMORE THEN GO TO PRTRTN;
RETURN;

PRTRTN: KLENAVG = KEYSUM / IXRECS;
KLENAVG = ROUND(KLENAVG);
MINSIZE = KLENAVG * CICA;
IXSIZE = IXLEN + 7;

IF MINSIZE GT IXLEN THEN DO;
   FILE RESULTS;
   PUT @08 //
       @08 '*****  INDEX CI SIZE ANALYSIS      *****'//
       @08 '*****  INDEX CI SIZE IS TOO SMALL  *****'/
       @08 'THE CURRENT INDEX CI SIZE IS ' IXSIZE /
       @08 'THE MINIMUM SIZE THE INDEX CI SHOULD BE IS '
       @52 MINSIZE 5.//
       @08 'THIS WILL ALLOW THE INDEX RECORDS TO ADDRESS '/
       @08 CICA 3.
       @13 'CIS IN THE CONTROL AREAS'/;
   END;
ELSE DO;
   FILE RESULTS;
   PUT @08 //
       @08 '*****  INDEX CI SIZE ANALYSIS       *****'//
       @08 '*****  INDEX CI SIZE IS SUFFICIENT  *****'/
       @08 'THE CURRENT INDEX CI SIZE IS ' IXSIZE /
       @08 'THE MINIMUM SIZE THE INDEX CI SHOULD BE IS '
       @52 MINSIZE 5.//
       @08 'THIS WILL ALLOW THE INDEX RECORDS TO ADDRESS '/
       @08 CICA 3.
       @13 'CIS IN THE CONTROL AREAS'/;
   END;

PCTUNU = TOTUCIS / TOTCIS;
PCTUNU = PCTUNU * 100;

FILE RESULTS;
PUT @08 //
    @08 '*****  INDEX RECORD PROCESSING SUMMARY  *****'//
    @08 'AVERAGE KEY LENGTH CALCULATED'
    @45 KLENAVG 3. /
    @08 'INDEX RECORDS PROCESSED'
    @43 IXRECS  5.//
    @08 '*****  DASD SPACE UTILIZATION ANALYSIS  *****'//
    @08 'TOTAL CI IN CLUSTER'
    @45 TOTCIS/
    @08 'TOTAL UNUSED CI IN CLUSTER'
    @45 TOTUCIS/
    @08 'PERCENT OF FILE EMPTY'
    @45 PCTUNU 3.//;
)ENDSEL

)SEL &VSMAVGL = YES
//*
//*  This program calculates the true average LRECL, which is
//*  useful documentation for VSAM space management.
//*
//*  If the true AVGLRECL is different from that specified in the
//*  catalog, you should redefine and reload the file.
//*
//*  NOTE: If the file is compressed, the true average LRECL will
//*        be even smaller. BMC decompresses the data for the
//*        SAS program.
//*
//*  DSN=&INDEXNAM
//*
//STEP030  EXEC SAS                                                     GMASMBT
//VSAMFILE  DD DSN=&DSNAME,DISP=SHR,
//             AMP=('BUFND=40,BUFNI=20')
//SYSIN     DD *
DATA OLD (KEEP = FILELEN);

INFILE VSAMFILE LENGTH=LEN;
INPUT;
FILELEN = LEN;
PROC MEANS;
)ENDSEL

./ ADD NAME=AP1PVSM6 0101-99014-99028-1718-00040-00040-00000-C095775
)TB 12
)SEL &PDSMEM ¬= &Z
)SEL &ENVIRON = B
//*
//* Save off delete/define cards to specified PDS member
//* (specified on the DSNLIST input card).
//*
//PDS&CNT!EXEC PGM=RNBUTLTY,PARM='ICEGENER,RC=00'
//RNBSYSIN  DD DUMMY
//SYSIN     DD DUMMY
//SYSUT1    DD *
    DELETE &DSNAME CLUSTER
    DEFINE CLUSTER -
       (NAME(&DSNAME) -
       FREESPACE(&NEWCIFP &NEWCAFP) -
       INDEXED -

)SEL &SPANNED = Y
       SPANNED -
)ENDSEL

       KEYS(&KEYLEN &KEYOFF) -
       RECORDSIZE(&AVGLRECL &MAXLRECL) -
       REUSE -
       SHAREOPTIONS(&SHROPTNS) -
       SPEED ) -
    DATA(NAME(&DSNAME..DATA) -
     CYLINDERS(&NEWPRIM &NEWSEC) -
     VOLUME( &VOLUME ) -
     CONTROLINTERVALSIZE(&NEWDCIS)) -
    INDEX(NAME(&DSNAME..INDEX) -
     TRACKS(&INDXPRIM &INDXSEC) -
     VOLUME( * ) -
     CONTROLINTERVALSIZE(&NEWICIS))

    IF MAXCC = 8 THEN SET MAXCC = 0
//SYSUT2    DD DSN=&PDSMEM,DISP=SHR
//SYSPRINT  DD SYSOUT=*
)ENDSEL
)ENDSEL
